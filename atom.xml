<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[CatChen]]></title>
  <subtitle><![CDATA[我的王国，我一定会让你永垂不朽的]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://catlittlechen.com/"/>
  <updated>2017-06-03T06:34:46.000Z</updated>
  <id>http://catlittlechen.com/</id>
  
  <author>
    <name><![CDATA[Chan Cat]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[那些年不懂的spark(3)]]></title>
    <link href="http://catlittlechen.com/2017/06/03/%E9%82%A3%E4%BA%9B%E5%B9%B4%E4%B8%8D%E6%87%82%E7%9A%84spark-3/"/>
    <id>http://catlittlechen.com/2017/06/03/那些年不懂的spark-3/</id>
    <published>2017-06-03T04:13:45.000Z</published>
    <updated>2017-06-03T06:34:46.000Z</updated>
    <content type="html"><![CDATA[<p>aws的emr起来之后，默认的磁盘很小，所以长期跑任务的时候，经常会因为磁盘不够，导致节点失败。而且，这种情况下的emr，是不会自动修复的。</p>
<h2 id="spark-history"><a href="#spark-history" class="headerlink" title="spark-history"></a>spark-history</h2><p>spark-default.xml<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">spark<span class="class">.history</span><span class="class">.fs</span><span class="class">.cleaner</span><span class="class">.enabled</span> true</span><br><span class="line">spark<span class="class">.history</span><span class="class">.fs</span><span class="class">.cleaner</span><span class="class">.interval</span> <span class="number">1</span>m</span><br><span class="line">spark<span class="class">.history</span><span class="class">.fs</span><span class="class">.cleaner</span><span class="class">.maxAge</span> <span class="number">1</span>h</span><br></pre></td></tr></table></figure></p>
<p>spark-history里面保存着spark的application的log，因此如果不需要的话，可以把清理的时间变短一下。</p>
<h2 id="spark-yarn"><a href="#spark-yarn" class="headerlink" title="spark-yarn"></a>spark-yarn</h2><p>yarn-site.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">name</span>&gt;</span>yarn.nodemanager.localizer.cache.target-size-mb<span class="tag">&lt;/<span class="title">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">value</span>&gt;</span>5120<span class="tag">&lt;/<span class="title">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">name</span>&gt;</span>yarn.nodemanager.localizer.cache.cleanup.interval-ms<span class="tag">&lt;/<span class="title">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">value</span>&gt;</span>30000<span class="tag">&lt;/<span class="title">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">property</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>spark执行任务的时候，会将自身需要的jar放到hadoop上，导致hadoop的磁盘会缓存下一堆的目录，也是可以定期清理的。</p>
<h2 id="u7ED3_u5C40"><a href="#u7ED3_u5C40" class="headerlink" title="结局"></a>结局</h2><p>未完待续</p>
<h2 id="Done"><a href="#Done" class="headerlink" title="Done"></a>Done</h2>]]></content>
    <summary type="html">
    <![CDATA[<p>aws的emr起来之后，默认的磁盘很小，所以长期跑任务的时候，经常会因为磁盘不够，导致节点失败。而且，这种情况下的emr，是不会自动修复的。</p>
<h2 id="spark-history"><a href="#spark-history" class="headerl]]>
    </summary>
    
      <category term="spark" scheme="http://catlittlechen.com/tags/spark/"/>
    
      <category term="踩坑日记" scheme="http://catlittlechen.com/tags/%E8%B8%A9%E5%9D%91%E6%97%A5%E8%AE%B0/"/>
    
      <category term="spark" scheme="http://catlittlechen.com/categories/spark/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[touch]]></title>
    <link href="http://catlittlechen.com/2017/05/26/touch/"/>
    <id>http://catlittlechen.com/2017/05/26/touch/</id>
    <published>2017-05-26T07:26:01.000Z</published>
    <updated>2017-05-26T07:45:29.000Z</updated>
    <content type="html"><![CDATA[<h3 id="Touch"><a href="#Touch" class="headerlink" title="Touch"></a>Touch</h3><p>touch这个命令,对于一个技术而言,应该是十分熟悉的.<br>像uwsgi这种就可以使用监听一个文件的方式来触发服务更新的部署方式,我们这时候就会用到<code>touch reload</code>的命令来完成.<br>更重要的是,我习惯性地打<code>ls -al</code>的命令来查看文件的最后修改时间,来查看是否有小朋友乱动了线上的文件.</p>
<p>直到有一天……..<br>有同事告诉我,touch有个神奇的功能.<br>于是乎,我<code>touch --help</code>下</p>
<pre><code>-a            只更改访问时间
-c, --no-create 不创建任何文件
-d, --date=字符串 使用指定字符串表示时间而非当前时间
-f          (忽略)
-h, --no-dereference      会影响符号链接本身，而非符号链接所指示的目的地
    (当系统支持更改符号链接的所有者时，此选项才有用)
-m            只更改修改时间
-r, --reference=FILE   use this file&apos;s times instead of current time
-t STAMP               use [[CC]YY]MMDDhhmm[.ss] instead of current time
--time=WORD        change the specified time:
    WORD is access, atime, or use: equivalent to -a
    WORD is modify or mtime: equivalent to -m
--help      显示此帮助信息并退出
--version     显示版本信息并退出
</code></pre><h3 id="u60CA_21"><a href="#u60CA_21" class="headerlink" title="惊!"></a>惊!</h3><p>touch是可以指定最后修改时间的!也就是说,<code>touch --date=&quot;2017-05-25 12:00:00&quot; reload&quot;</code>,这个命令可以将reload的最后修改时间改回去!<br>人与人之间最基本的信任呢.</p>
<h3 id="Stat"><a href="#Stat" class="headerlink" title="Stat"></a>Stat</h3><p>放心,<code>stat reload</code>这个命令还是可以看出问题来的.</p>
<pre><code>文件：&quot;reload&quot;
大小：0             块：0          IO 块：4096   普通空文件
    设备：808h/2056d    Inode：25039211    硬链接：1
权限：(0664/-rw-rw-r--)  Uid：( 1000/ catchen)   Gid：( 1000/ catchen)
    最近访问：2017-05-25 12:00:00.000000000 +0800
    最近更改：2017-05-25 12:00:00.000000000 +0800
    最近改动：2017-05-26 15:38:02.693909554 +0800
    创建时间：-
</code></pre><h3 id="u540E_u8BB0"><a href="#u540E_u8BB0" class="headerlink" title="后记"></a>后记</h3><p>这感觉,就像ls无法告诉我真实大小一样,现在连最后修改时间都不行了.</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="Touch"><a href="#Touch" class="headerlink" title="Touch"></a>Touch</h3><p>touch这个命令,对于一个技术而言,应该是十分熟悉的.<br>像uwsgi这种就可以使用监听一个文件的方式来触发服]]>
    </summary>
    
      <category term="学习" scheme="http://catlittlechen.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="学习" scheme="http://catlittlechen.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[dmesg]]></title>
    <link href="http://catlittlechen.com/2017/04/06/dmesg/"/>
    <id>http://catlittlechen.com/2017/04/06/dmesg/</id>
    <published>2017-04-06T12:09:19.000Z</published>
    <updated>2017-04-08T08:26:00.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u7528_u5904"><a href="#u7528_u5904" class="headerlink" title="用处"></a>用处</h2><p>dmesg显示内核环缓冲区内容，一般我都是来查看比如oom之类的问题。之前我同事问我时间怎么算。我也是一直没记录这个公式，只放在印象笔记里面，现在就写在这里吧。</p>
<h2 id="u65F6_u95F4"><a href="#u65F6_u95F4" class="headerlink" title="时间"></a>时间</h2><p>dmesg的时间确实难看懂，可以通过以下的命令转化<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date -d <span class="string">"1970-01-01 UTC `echo "</span>$(date +%s)-$(cat /<span class="keyword">proc</span>/uptime|cut -f <span class="number">1</span> -d' ')+dmesg的时间戳<span class="string">"|bc ` seconds"</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u7528_u5904"><a href="#u7528_u5904" class="headerlink" title="用处"></a>用处</h2><p>dmesg显示内核环缓冲区内容，一般我都是来查看比如oom之类的问题。之前我同事问我时间怎么算。我也是一]]>
    </summary>
    
      <category term="学习" scheme="http://catlittlechen.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="学习" scheme="http://catlittlechen.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[pyrobuf]]></title>
    <link href="http://catlittlechen.com/2017/04/02/pyrobuf/"/>
    <id>http://catlittlechen.com/2017/04/02/pyrobuf/</id>
    <published>2017-04-02T14:03:44.000Z</published>
    <updated>2017-04-02T14:30:07.000Z</updated>
    <content type="html"><![CDATA[<h2 id="protobuf"><a href="#protobuf" class="headerlink" title="protobuf"></a>protobuf</h2><p>Protocol Buffers 是一种轻便高效的结构化数据存储格式。我也是重度使用者。最近需要大量的实时处理Tb级别的数据，因此找到了protobuf的代替库 —- <a href="https://github.com/appnexus/pyrobuf" target="_blank" rel="external">pyrobuf</a></p>
<h2 id="pyrobuf"><a href="#pyrobuf" class="headerlink" title="pyrobuf"></a>pyrobuf</h2><p>pyrobuf是一个使用cython的pb库。一开始从他的github中，我确实看到了挺好的优化效果。</p>
<p>但是pyrobuf这个库的限制还是蛮大的，主要是对于proto文件。比如</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 不能在message里面定义数据结构，不然转化的过程中，会找不到定义；</span><br><span class="line"><span class="number">2</span>. proto定义的过程中，message的定义不能加上分号为结尾；</span><br><span class="line"><span class="number">3</span>. <span class="class"><span class="keyword">enum</span>定义的类型，生成之后暂时还找不到映射会名称的方式；</span></span><br></pre></td></tr></table></figure>
<h2 id="use"><a href="#use" class="headerlink" title="use"></a>use</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install pyrobuf</span><br><span class="line">pyrobuf --<span class="keyword">out</span>-<span class="keyword">dir</span> <span class="keyword">out</span> --build-<span class="keyword">dir</span> build --install</span><br></pre></td></tr></table></figure>
<p>这里面，out目录存放着生成的cython的代码，build目录存放这边一好的so文件，而install的参数添加之后，则pyrobuf会将编译好的so文件复制到python的library目录，这就可以直接使用。</p>
<h2 id="u7ED3_u679C"><a href="#u7ED3_u679C" class="headerlink" title="结果"></a>结果</h2><p>上线观察了下数据，原本20分钟转化的数据，只用了4分钟就转化完毕。不过数据内容还没有核对，晚点再查看吧~</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="protobuf"><a href="#protobuf" class="headerlink" title="protobuf"></a>protobuf</h2><p>Protocol Buffers 是一种轻便高效的结构化数据存储格式。我也是重度使用者。最近]]>
    </summary>
    
      <category term="pyrobuf" scheme="http://catlittlechen.com/tags/pyrobuf/"/>
    
      <category term="python" scheme="http://catlittlechen.com/tags/python/"/>
    
      <category term="python" scheme="http://catlittlechen.com/categories/python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[那些年不懂的spark(2)]]></title>
    <link href="http://catlittlechen.com/2017/03/30/%E9%82%A3%E4%BA%9B%E5%B9%B4%E4%B8%8D%E6%87%82%E7%9A%84spark-2/"/>
    <id>http://catlittlechen.com/2017/03/30/那些年不懂的spark-2/</id>
    <published>2017-03-30T11:38:28.000Z</published>
    <updated>2017-04-02T14:01:47.000Z</updated>
    <content type="html"><![CDATA[<h2 id="partitionBy__26amp_3B_26amp_3B_s3"><a href="#partitionBy__26amp_3B_26amp_3B_s3" class="headerlink" title="partitionBy &amp;&amp; s3"></a>partitionBy &amp;&amp; s3</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df<span class="class">.write</span><span class="class">.partitionBy</span>(<span class="string">'date'</span>, <span class="string">'index1'</span>, <span class="string">'index2'</span>, <span class="string">'index3'</span>).<span class="function"><span class="title">parquet</span><span class="params">(<span class="string">'some/path/'</span>)</span></span></span><br></pre></td></tr></table></figure>
<p>我用spark程序在输出parquet的过程中，通过partitionBy的column来自动生成文件夹。由于spark在写入的过程中，会扫描<code>some/path/</code>的所有目录。然后由于我的目录中有以<code>date</code>这个时间维度的标准的，这造成随着时间的推移，文件夹会越来越多，扫描的数据也就越来越慢。然后由于我使用的存储是s3，而s3不是一个真正意义上的文件系统，因而扫描文件夹的过程是一个调用api的过程，就更加慢了~</p>
<p>解决方式：可以写入hdfs等文件系统，再通过s3-dist-cp这个工具同步到s3上。</p>
<h2 id="so_u6587_u4EF6"><a href="#so_u6587_u4EF6" class="headerlink" title="so文件"></a>so文件</h2><p>spark 可以通过sparkContext.addFiles这个api，把so文件添加到任务实例上。</p>
<h2 id="u7ED3_u5C40"><a href="#u7ED3_u5C40" class="headerlink" title="结局"></a>结局</h2><p>未完待续</p>
<h2 id="Done"><a href="#Done" class="headerlink" title="Done"></a>Done</h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="partitionBy__26amp_3B_26amp_3B_s3"><a href="#partitionBy__26amp_3B_26amp_3B_s3" class="headerlink" title="partitionBy &amp;&amp; s3"]]>
    </summary>
    
      <category term="spark" scheme="http://catlittlechen.com/tags/spark/"/>
    
      <category term="踩坑日记" scheme="http://catlittlechen.com/tags/%E8%B8%A9%E5%9D%91%E6%97%A5%E8%AE%B0/"/>
    
      <category term="spark" scheme="http://catlittlechen.com/categories/spark/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[那些年不懂的spark]]></title>
    <link href="http://catlittlechen.com/2017/03/19/%E9%82%A3%E4%BA%9B%E5%B9%B4%E4%B8%8D%E6%87%82%E7%9A%84spark/"/>
    <id>http://catlittlechen.com/2017/03/19/那些年不懂的spark/</id>
    <published>2017-03-19T02:31:34.000Z</published>
    <updated>2017-03-26T01:30:34.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u611F_u609F"><a href="#u611F_u609F" class="headerlink" title="感悟"></a>感悟</h2><p>spark是一个好东西。流式处理数据，扩容方便，较大程度上的利用机器，学习还是很有必要的。这几个星期的使用，也踩了不少坑。世界上的很多东西，不是难，而是不知道。</p>
<h2 id="jsc"><a href="#jsc" class="headerlink" title="_jsc"></a>_jsc</h2><p>我是python的使用者，近来发现需要在启动spark的时候设置参数，但是在文档查找的过程中，只发现只有java的api文档里面有相关的参数设置，而python没有。囧~</p>
<p>最后发现python的<code>SparkContext</code>里，有一个参数是<code>_jsc</code>,其代表的恰恰就是java里面的 <code>SparkContext</code>。运行时可以通过这个对象，来实现参数的设置。</p>
<h2 id="parquet-enable-summary-metadata"><a href="#parquet-enable-summary-metadata" class="headerlink" title="parquet.enable.summary-metadata"></a>parquet.enable.summary-metadata</h2><p>上面提到的参数设置，其实就是这个参数了。由于我所使用的spark的版本是1.6.1，因此这个参数默认的值是true，2.0以后默认为false。详细可见 <a href="https://issues.apache.org/jira/browse/SPARK-15719" target="_blank" rel="external">issue</a></p>
<p>大概意思如下，spark在生成parquet文件的过程中，最后会扫描文件夹下的所有文件，并将文件的大致的详细汇总到文件夹目录的metadata文件，完成这个过程之后，在下次直接匹配这个文件夹的时候，spark会读取metadata，加快扫描的速度。</p>
<p>问题是生成这个metadata的文件是需要扫描所有文件的！而我生成paruqet的时候，是以追加的形式加入，频率还是蛮高的情况下，这就意味着我的spark程序会花费大量的时间在汇总这部分数据。并且汇总数据的过程是不会分布到多台机器上运行的。这就大大的降低了集群的利用率，其实也毫无必要。</p>
<p>因此spark生成parquet的过程中，可以选择关闭这个特性~</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sparkContext._jsc<span class="class">.hadoopConfiguration</span><span class="class">.set</span>(<span class="string">'parquet.enable.summary-metadata'</span>, <span class="string">'false'</span>)</span><br></pre></td></tr></table></figure>
<h2 id="partitionBy"><a href="#partitionBy" class="headerlink" title="partitionBy"></a>partitionBy</h2><p>一开始我一直纠结了很多问题，output的分类就是其中一个。而<code>partitonBy</code>完美地解决了我的需求。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df<span class="class">.write</span><span class="class">.partitionBy</span>(<span class="string">'index1'</span>, <span class="string">'index2'</span>, <span class="string">'index3'</span>).<span class="function"><span class="title">parquet</span><span class="params">(<span class="string">'some/path/'</span>)</span></span></span><br></pre></td></tr></table></figure>
<p>以上的代码中，<code>df</code>为一个dataFrame的数据集。</p>
<p>这段代码可以根据index1, index2, index3这几个columns来分类，将数据自动分为如下的目录结构保存.</p>
<figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">some/path/i<span class="label">ndex1</span>=&#123;i<span class="label">ndex1</span>&#125;/i<span class="label">ndex2</span>=&#123;i<span class="label">ndex2</span>&#125;/i<span class="label">ndex3</span>=&#123;i<span class="label">ndex3</span>&#125;/part-****.parquet</span><br></pre></td></tr></table></figure>
<p>之前还傻乎乎地groupBy数据，然后用了collect这个算子，因而需要读取所有文件，就有内存问题等存在。</p>
<h2 id="binaryFiles"><a href="#binaryFiles" class="headerlink" title="binaryFiles"></a>binaryFiles</h2><p>这个不算坑，只是自己没有注意到而已。</p>
<p>之前都是使用<code>textFile</code>的格式读取文本文件，这个过程中，没有指定<code>minPartition</code>，而<code>minPartition</code>的值也基本默认为文本文件的个数。但是<code>binaryFiles</code>不是。程序在默认读取大量二进制文件之后，并没有选择分开，而是<code>minPartition</code>为1，因此这里需要手动指定。</p>
<h2 id="parquet__26amp_3B_26amp_3B_sparkSQL"><a href="#parquet__26amp_3B_26amp_3B_sparkSQL" class="headerlink" title="parquet &amp;&amp; sparkSQL"></a>parquet &amp;&amp; sparkSQL</h2><p>sparkSQL太杀手级了~</p>
<p>parquet是列存储数据模式，可以大大的减少存储的文件大小，减少扫描过程中的大小。效率惊人~</p>
<p>sparkSQL在读取文件夹目录下所有文件的过程中，存在一个特定<code>partition auto-discovery</code>的特性。在spark的文档中有详细的记载。大概如下：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = sqlContext<span class="class">.read</span><span class="class">.parquet</span>(/some/path)</span><br></pre></td></tr></table></figure>
<p>如果<code>/some/path</code>下有目录如下<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/some/path</span></span><br><span class="line">	-<span class="ruby">- <span class="regexp">/index1=h1/index</span>2=f1/</span><br><span class="line"></span>	-<span class="ruby">- <span class="regexp">/index1=h1/index</span>2=f2/</span><br><span class="line"></span>	-<span class="ruby">- <span class="regexp">/index1=h2/index</span>2=f1/</span><br><span class="line"></span>	-<span class="ruby">- <span class="regexp">/index1=h2/index</span>2=f2/</span></span><br></pre></td></tr></table></figure></p>
<p>则最后生成的sparkSQL的table里面，将会自动的加入index1, index2的column，当你使用index1来查询时，即</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df.<span class="function"><span class="title">registerTempTable</span><span class="params">(<span class="string">"log"</span>)</span></span></span><br><span class="line">sqlContext.<span class="function"><span class="title">sql</span><span class="params">(<span class="string">"SELECT * FROM log WHERE index1 = h1"</span>)</span></span></span><br></pre></td></tr></table></figure>
<p>这个过程中，会自动的只扫描index1=h1的目录下的文件。<br>缺点是我喜欢使用通配符的形式来读取，结果通配的列就不存在了~<br>sad~</p>
<h2 id="u7ED3_u5C40"><a href="#u7ED3_u5C40" class="headerlink" title="结局"></a>结局</h2><p>未完待续~</p>
<h2 id="Done"><a href="#Done" class="headerlink" title="Done"></a>Done</h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u611F_u609F"><a href="#u611F_u609F" class="headerlink" title="感悟"></a>感悟</h2><p>spark是一个好东西。流式处理数据，扩容方便，较大程度上的利用机器，学习还是很有必要的。这几个星期的使]]>
    </summary>
    
      <category term="spark" scheme="http://catlittlechen.com/tags/spark/"/>
    
      <category term="踩坑日记" scheme="http://catlittlechen.com/tags/%E8%B8%A9%E5%9D%91%E6%97%A5%E8%AE%B0/"/>
    
      <category term="spark" scheme="http://catlittlechen.com/categories/spark/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[向2016致敬]]></title>
    <link href="http://catlittlechen.com/2017/01/25/%E5%90%912016%E8%87%B4%E6%95%AC/"/>
    <id>http://catlittlechen.com/2017/01/25/向2016致敬/</id>
    <published>2017-01-25T10:26:51.000Z</published>
    <updated>2017-02-20T13:14:33.000Z</updated>
    <content type="html"><![CDATA[<p>  2016年的我，你好，我是2017年的你。拖了很久，我才开始写这一封信给你，来告诉你，这一年的故事。先给你的2016年打一个分吧，87分，满分100分。</p>
<p>  2016年，在历经3年的努力下，你终于将自己多年的积蓄给父母买了一个房子，过年回家的时候，看到父母忙忙碌碌地整理房子，心情十分复杂。十几年来，当第一次懂事的时候，你就知道父母一直希望拥有这么一个属于自己的房子，只是一直没有能力。感谢2016年的你，在外包和工作等压力下，完成了这个心愿，过去3年，至少这件心愿，你完成了。不过，2016年的你，已经把所有的积蓄都花完了，苦了2017年的我了。你还记得你曾经答应嘻嘻给她在广州一个家么？我知道你一直都还记得，只是说，你已经尽力了。算了，那就让2017年的我好好努力吧。</p>
<p>  说到赚钱这一方面，2016年的你，很感谢你守住了另外一份承诺。没有在你身边的大环境的情况下，你做类似夺宝之类的产品。虽然2016年的你也没有推出个人作品，不管是CleverKid还是Say，就等2017年的我来完成吧。我知道努力坚持自己是有多难，感谢你坚持下来了。2017年的我也会好好坚持本心的。</p>
<p>  你是一个喜欢数学的理科生，但是这一年里面的工作其实大部分都和数学的相关性不大，其实你也没能够发挥出自己的特长。这也和你现在所在的工作岗位有关系吧。不过没关系，自己好好学习吧。现在大数据和人工智能这两方面都是比较热门的，也是十分适合你的工作，希望你可以好好珍惜。</p>
<p>  2017年的我，比起你而言，确实是长大了。我知道，也许选择比努力更加重要，你创造的多少价值，才能得到多少报酬。因此，希望我们可以创造自己的价值。想想2016年的年初，你还在抱怨年终太少之类的话，现在想想自己还是太幼稚了，你啊，确实是没有创造足够的价值，对吧？没事，我们这种人就是天生的骄傲型，相信天赋，过去努力积累的实例和未来的自己。纵使我们徘徊在现实和梦想之间，我们也会去看看梦想的世界，如果就这么屈服于现实，怎么知道世界的美好呢？</p>
<p>  不过，2016年的时候，你还是有几点是做得不够好的。首先，你发脾气了，虽然发脾气不是一件什么大不了的事情，但是事实上，在某些时候你不应该发脾气，比如对待嘻嘻的时候。人嘛，往往会宽容那些不熟的人，却无法容忍自己人的错误。这点希望以后可以改改。第二点不好的地方，话说，你学习swift做ios也好，机器学习也罢，要学习深一些，你现在两门的基础都没有打好，2016年反而觉得有点浪费了。后端没深入学习，反而学了两个兴趣方面，现在3个方面都没有好的发展。这样子不是很好。2017年的时候要好好选择一种，然后制定计划，好好学习。第三点，2016年，你从游戏转到了广告，恭喜你，先走出了一个温床，进入了另外一个温床~~告诉你哦，你还是得好好努力的。</p>
<p>  2016年的我，我知道你丢失了很多美好，我会在2017年，帮你找回来的。我相信你的骄傲，会有一天可以看到你的美好笑容和幸福。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>  2016年的我，你好，我是2017年的你。拖了很久，我才开始写这一封信给你，来告诉你，这一年的故事。先给你的2016年打一个分吧，87分，满分100分。</p>
<p>  2016年，在历经3年的努力下，你终于将自己多年的积蓄给父母买了一个房子，过年回家的时候，看到父母]]>
    </summary>
    
      <category term="生活" scheme="http://catlittlechen.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="活着" scheme="http://catlittlechen.com/categories/%E6%B4%BB%E7%9D%80/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[elasticsearch系列笔记(六)  索引]]></title>
    <link href="http://catlittlechen.com/2016/08/21/es6/"/>
    <id>http://catlittlechen.com/2016/08/21/es6/</id>
    <published>2016-08-21T12:37:01.000Z</published>
    <updated>2017-03-25T14:12:44.000Z</updated>
    <content type="html"><![CDATA[<h4 id="u521B_u5EFA_u7D22_u5F15"><a href="#u521B_u5EFA_u7D22_u5F15" class="headerlink" title="创建索引"></a>创建索引</h4><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PUT /my_index</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"settings"</span> &#123;&#125;</span><br><span class="line">    <span class="string">"mappings"</span>: &#123;</span><br><span class="line">        <span class="string">"type_one"</span>:&#123;&#125;,</span><br><span class="line">        <span class="string">"type_two"</span>:&#123;&#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="u5220_u9664_u7D22_u5F15"><a href="#u5220_u9664_u7D22_u5F15" class="headerlink" title="删除索引"></a>删除索引</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="regexp">/my_index</span></span><br></pre></td></tr></table></figure>
<h4 id="settings_3A"><a href="#settings_3A" class="headerlink" title="settings:"></a>settings:</h4><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">number<span class="number">_</span><span class="keyword">of</span><span class="number">_</span>shards    主索引的个数</span><br><span class="line">number<span class="number">_</span><span class="keyword">of</span><span class="number">_</span>replicas 复制分片的个数</span><br></pre></td></tr></table></figure>
<p>分析器,这个很重要，合理的使用分析器，可以让你的es拥有合理的性能</p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="u521B_u5EFA_u7D22_u5F15"><a href="#u521B_u5EFA_u7D22_u5F15" class="headerlink" title="创建索引"></a>创建索引</h4><figure class="highlight xq]]>
    </summary>
    
      <category term="elasticsearch" scheme="http://catlittlechen.com/tags/elasticsearch/"/>
    
      <category term="学习" scheme="http://catlittlechen.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="elasticsearch" scheme="http://catlittlechen.com/categories/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[elasticsearch系列笔记(五) 结构化查询]]></title>
    <link href="http://catlittlechen.com/2016/08/12/es5/"/>
    <id>http://catlittlechen.com/2016/08/12/es5/</id>
    <published>2016-08-12T13:16:59.000Z</published>
    <updated>2017-03-25T14:07:48.000Z</updated>
    <content type="html"><![CDATA[<h4 id="u7ED3_u6784_u5316_u67E5_u8BE2Query_DSL"><a href="#u7ED3_u6784_u5316_u67E5_u8BE2Query_DSL" class="headerlink" title="结构化查询Query DSL"></a>结构化查询Query DSL</h4><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"query"</span>: &#123;</span><br><span class="line">            QUERY_NAME: &#123;</span><br><span class="line">                FIELD_NAME: &#123;</span><br><span class="line">                    ARGUMENT: VALUE,</span><br><span class="line">                    ARGUMENT: VALUE,</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h4 id="u8FC7_u6EE4_u67E5_u8BE2Filter_DSL"><a href="#u8FC7_u6EE4_u67E5_u8BE2Filter_DSL" class="headerlink" title="过滤查询Filter DSL"></a>过滤查询Filter DSL</h4><h4 id="term__u8FC7_u6EE4"><a href="#term__u8FC7_u6EE4" class="headerlink" title="term 过滤"></a>term 过滤</h4><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="collection">&#123;</span><br><span class="line">    <span class="string">"term"</span>: <span class="collection">&#123;</span><br><span class="line">        <span class="string">"&#123;field&#125;"</span>: <span class="collection">&#123;value&#125;</span> </span><br><span class="line">    &#125;</span></span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<h4 id="terms__u8FC7_u6EE4"><a href="#terms__u8FC7_u6EE4" class="headerlink" title="terms 过滤"></a>terms 过滤</h4><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="collection">&#123;</span><br><span class="line">    <span class="string">"terms"</span>: <span class="collection">&#123;</span><br><span class="line">        <span class="string">"&#123;field&#125;"</span>: <span class="collection">[ <span class="collection">&#123;value1&#125;</span>, <span class="collection">&#123;value2&#125;</span> ]</span></span><br><span class="line">    &#125;</span></span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<h4 id="range_u8FC7_u6EE4"><a href="#range_u8FC7_u6EE4" class="headerlink" title="range过滤"></a>range过滤</h4><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="expression">&#123;</span><br><span class="line">    <span class="string">"range"</span>: &#123;</span><br><span class="line">        <span class="string">"&#123;field&#125;"</span>: &#123;</span><br><span class="line">            <span class="string">"gte"</span>: 20, /<span class="end-block">/<span class="keyword">gt</span> <span class="keyword">gte</span></span>, <span class="variable"><span class="keyword">lt</span></span> <span class="variable"><span class="keyword">lte</span></span></span><br><span class="line">        &#125;</span><span class="xml"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<h4 id="exits_2C_missing_u8FC7_u6EE4"><a href="#exits_2C_missing_u8FC7_u6EE4" class="headerlink" title="exits, missing过滤"></a>exits, missing过滤</h4><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="collection">&#123;</span><br><span class="line">    <span class="string">"exists"</span>: <span class="collection">&#123;</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"&#123;field&#125;"</span>,//存在这个类型</span><br><span class="line">    &#125;</span></span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<h4 id="u8FC7_u6EE4"><a href="#u8FC7_u6EE4" class="headerlink" title="过滤"></a>过滤</h4><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="collection">&#123;</span><br><span class="line">    <span class="string">"bool"</span>: <span class="collection">&#123;</span><br><span class="line">        <span class="string">"must"</span>: <span class="collection">&#123;&#125;</span>,//必须符合</span><br><span class="line">        <span class="string">"must_not"</span>: <span class="collection">&#123;&#125;</span>,//必须不符合</span><br><span class="line">        <span class="string">"should"</span>: <span class="collection">&#123;&#125;</span>,//必须符合其中一个条件</span><br><span class="line">    &#125;</span></span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<h4 id="match_all"><a href="#match_all" class="headerlink" title="match_all"></a>match_all</h4><h4 id="match"><a href="#match" class="headerlink" title="match"></a>match</h4><h4 id="multi_match"><a href="#multi_match" class="headerlink" title="multi_match"></a>multi_match</h4><h4 id="u67E5_u8BE2_u6BD4_u8FC7_u6EE4_u591A_u4E86_u76F8_u5173_u6027_u8BA1_u7B97"><a href="#u67E5_u8BE2_u6BD4_u8FC7_u6EE4_u591A_u4E86_u76F8_u5173_u6027_u8BA1_u7B97" class="headerlink" title="查询比过滤多了相关性计算"></a>查询比过滤多了相关性计算</h4><h4 id="u590D_u5408_u67E5_u8BE2"><a href="#u590D_u5408_u67E5_u8BE2" class="headerlink" title="复合查询"></a>复合查询</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   	"<span class="attribute">filtered</span>": <span class="value">&#123;</span><br><span class="line">       	"<span class="attribute">query</span>":  <span class="value">&#123; "<span class="attribute">match</span>": <span class="value">&#123; "<span class="attribute">email</span>": <span class="value"><span class="string">"business opportunity"</span> </span>&#125;</span>&#125;</span>,</span><br><span class="line">       	"<span class="attribute">filter</span>": <span class="value">&#123; "<span class="attribute">term</span>":  <span class="value">&#123; "<span class="attribute">folder</span>": <span class="value"><span class="string">"inbox"</span> </span>&#125;</span>&#125;</span><br><span class="line">   	</span>&#125;</span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
<h4 id="u9A8C_u8BC1_u67E5_u8BE2_uFF0C_u89E3_u91CA_u9519_u8BEF"><a href="#u9A8C_u8BC1_u67E5_u8BE2_uFF0C_u89E3_u91CA_u9519_u8BEF" class="headerlink" title="验证查询，解释错误"></a>验证查询，解释错误</h4><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET /gb/tweet/_validate/query?explain</span><br><span class="line">   	&#123;</span><br><span class="line">       	<span class="string">"query"</span>: &#123;</span><br><span class="line">           	<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">       	&#125;</span><br><span class="line">   	&#125;</span><br></pre></td></tr></table></figure>
<h4 id="u6392_u5E8F_uFF0C_u5728query_u4E4B_u540E"><a href="#u6392_u5E8F_uFF0C_u5728query_u4E4B_u540E" class="headerlink" title="排序，在query之后"></a>排序，在query之后</h4><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">   	<span class="string">"query"</span>: &#123;</span><br><span class="line">   	&#125;,</span><br><span class="line">   	<span class="string">"sort"</span>: &#123;</span><br><span class="line">   		<span class="string">"&#123;field&#125;"</span>:&#123;</span><br><span class="line">   			<span class="string">"order"</span>: <span class="string">"desc"</span></span><br><span class="line">   		&#125;,</span><br><span class="line">   		<span class="string">"&#123;field&#125;"</span>:&#123;</span><br><span class="line">   			<span class="string">"order"</span>: <span class="string">"asc"</span>,</span><br><span class="line">   			<span class="string">"mode"</span>: <span class="string">"min"</span> //field为多个值时</span><br><span class="line">       	&#125;</span><br><span class="line">   	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="u7ED3_u6784_u5316_u67E5_u8BE2Query_DSL"><a href="#u7ED3_u6784_u5316_u67E5_u8BE2Query_DSL" class="headerlink" title="结构化查询Query DSL">]]>
    </summary>
    
      <category term="elasticsearch" scheme="http://catlittlechen.com/tags/elasticsearch/"/>
    
      <category term="学习" scheme="http://catlittlechen.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="elasticsearch" scheme="http://catlittlechen.com/categories/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[elasticsearch系列笔记(四) 搜索]]></title>
    <link href="http://catlittlechen.com/2016/08/09/es4/"/>
    <id>http://catlittlechen.com/2016/08/09/es4/</id>
    <published>2016-08-09T00:51:19.000Z</published>
    <updated>2017-03-25T14:06:43.000Z</updated>
    <content type="html"><![CDATA[<h4 id="u8DEF_u7531_u6587_u6863_u5230_u5206_u7247"><a href="#u8DEF_u7531_u6587_u6863_u5230_u5206_u7247" class="headerlink" title="路由文档到分片"></a>路由文档到分片</h4><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shard = hash<span class="comment">(routing)</span> <span class="preprocessor">%</span> <span class="label">number_of_primary_shards</span></span><br></pre></td></tr></table></figure>
<h4 id="replication"><a href="#replication" class="headerlink" title="replication"></a>replication</h4><pre><code>请求是否需要等待复制分区的成功响应，默认为sync等待，async异步不等待。 
</code></pre><h4 id="consistency"><a href="#consistency" class="headerlink" title="consistency"></a>consistency</h4><pre><code>文档在写入的时候，需要规定一定的分区更新成功之后，才会返回客户端成功，如果节点不够，则不能删除或者索引任何文件

int((primary + number_of_replicas) / 2) + 1
</code></pre><h4 id="u7A7A_u641C_u7D22"><a href="#u7A7A_u641C_u7D22" class="headerlink" title="空搜索"></a>空搜索</h4><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">    hits:</span><br><span class="line">        total 总文档数</span><br><span class="line">        hits 匹配到的数量</span><br><span class="line">        max_score 最大相关性</span><br><span class="line">    took：请求时间</span><br><span class="line">    _shards: 用到的分片大小和类型</span><br><span class="line">GET /_search?size=&#123;size&#125;&amp;<span class="keyword">from</span>=&#123;<span class="keyword">from</span>&#125;</span><br><span class="line">    从<span class="keyword">from</span>开始最多size个内容返回</span><br></pre></td></tr></table></figure>
<h4 id="u7B80_u6613_u641C_u7D22"><a href="#u7B80_u6613_u641C_u7D22" class="headerlink" title="简易搜索"></a>简易搜索</h4><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET /_all/&#123;type&#125;/_search?q=&#123;field&#125;:&#123;key&#125;</span><br><span class="line">GET /_all/&#123;type&#125;/_search?q=`urlencode(+&#123;field&#125;:&#123;key&#125;-&#123;field&#125;:&#123;key&#125;)` +条件满足 -条件不满足</span><br><span class="line">GET /_all/&#123;type&#125;/_search?q=&#123;value&#125; 查询包含<span class="keyword">value</span>的文档</span><br></pre></td></tr></table></figure>
<h4 id="u65B0_u5EFA_u7D22_u5F15_uFF0C_u8BBE_u7F6E_u5206_u6790_u5668"><a href="#u65B0_u5EFA_u7D22_u5F15_uFF0C_u8BBE_u7F6E_u5206_u6790_u5668" class="headerlink" title="新建索引，设置分析器"></a>新建索引，设置分析器</h4><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">PUT /&#123;index&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"mappings"</span>: &#123;</span><br><span class="line">        <span class="string">"&#123;type&#125;"</span>: &#123;</span><br><span class="line">            <span class="string">"properties"</span>: &#123;</span><br><span class="line">                <span class="string">"field"</span>: &#123;</span><br><span class="line">                    <span class="string">"type"</span>: <span class="string">""</span>, //string, date, long, object(嵌套)</span><br><span class="line">                    <span class="string">"index"</span>: <span class="string">""</span>, // analyzed, not_analyzed, no</span><br><span class="line">                    <span class="string">"analyzer"</span>: <span class="string">""</span>, // english, space</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="u6D4B_u8BD5_u5206_u6790_u5668"><a href="#u6D4B_u8BD5_u5206_u6790_u5668" class="headerlink" title="测试分析器"></a>测试分析器</h4><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /<span class="list">&#123;index&#125;</span>/_analyze?field=<span class="list">&#123;field&#125;</span>&amp;text=<span class="list">&#123;value&#125;</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="u8DEF_u7531_u6587_u6863_u5230_u5206_u7247"><a href="#u8DEF_u7531_u6587_u6863_u5230_u5206_u7247" class="headerlink" title="路由文档到分片"><]]>
    </summary>
    
      <category term="elasticsearch" scheme="http://catlittlechen.com/tags/elasticsearch/"/>
    
      <category term="学习" scheme="http://catlittlechen.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="elasticsearch" scheme="http://catlittlechen.com/categories/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[elasticsearch系列笔记(三) 基本API]]></title>
    <link href="http://catlittlechen.com/2016/08/04/es3/"/>
    <id>http://catlittlechen.com/2016/08/04/es3/</id>
    <published>2016-08-04T12:11:51.000Z</published>
    <updated>2017-03-25T14:05:23.000Z</updated>
    <content type="html"><![CDATA[<h4 id="u6DFB_u52A0_u6587_u6863_2C_u81EA_u5B9A_u4E49ID"><a href="#u6DFB_u52A0_u6587_u6863_2C_u81EA_u5B9A_u4E49ID" class="headerlink" title="添加文档,自定义ID"></a>添加文档,自定义ID</h4><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PUT /&#123;index&#125;/&#123;type&#125;/&#123;id&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"field"</span>: <span class="string">"value"</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="u6DFB_u52A0_u6587_u6863_uFF0C_u8FD9_u65F6_u5019_u7684ID_u662FES_u81EA_u52A8_u751F_u6210_uFF0C_u4E3A22_u4F4D_u7684UUIDS"><a href="#u6DFB_u52A0_u6587_u6863_uFF0C_u8FD9_u65F6_u5019_u7684ID_u662FES_u81EA_u52A8_u751F_u6210_uFF0C_u4E3A22_u4F4D_u7684UUIDS" class="headerlink" title="添加文档，这时候的ID是ES自动生成，为22位的UUIDS"></a>添加文档，这时候的ID是ES自动生成，为22位的UUIDS</h4><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /&#123;index&#125;/&#123;type&#125;/</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"field"</span>: <span class="string">"value"</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="u83B7_u5F97_u6587_u6863"><a href="#u83B7_u5F97_u6587_u6863" class="headerlink" title="获得文档"></a>获得文档</h4><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /&#123;index&#125;/&#123;type&#125;/&#123;id&#125;?pretty</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"_index"</span> :   <span class="string">"&#123;index&#125;"</span>,</span><br><span class="line">    <span class="string">"_type"</span> :    <span class="string">"&#123;type&#125;"</span>,</span><br><span class="line">    <span class="string">"_id"</span> :      <span class="string">"&#123;id&#125;"</span>,</span><br><span class="line">    <span class="string">"_version"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="string">"found"</span> :    true, //是否找到，<span class="number">404</span>同步返回</span><br><span class="line">    <span class="string">"_source"</span> :  &#123;</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"value"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="u83B7_u5F97_u6587_u6863_u7684_u7279_u5B9A_u5C5E_u6027"><a href="#u83B7_u5F97_u6587_u6863_u7684_u7279_u5B9A_u5C5E_u6027" class="headerlink" title="获得文档的特定属性"></a>获得文档的特定属性</h4><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET /&#123;index&#125;/&#123;type&#125;/&#123;id&#125;/&#123;key&#125;?pretty</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"&#123;key&#125;"</span>: <span class="string">"value"</span></span><br><span class="line">&#125;</span><br><span class="line">key 为上面json的值</span><br></pre></td></tr></table></figure>
<h4 id="u83B7_u5F97_u6587_u6863_u7684_u7279_u5B9A_u503C"><a href="#u83B7_u5F97_u6587_u6863_u7684_u7279_u5B9A_u503C" class="headerlink" title="获得文档的特定值"></a>获得文档的特定值</h4><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">GET /&#123;index&#125;/&#123;type&#125;/&#123;id&#125;?pretty&amp;_source=&#123;field1&#125;,&#123;field2&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"_index"</span> :   <span class="string">"&#123;index&#125;"</span>,</span><br><span class="line">    <span class="string">"_type"</span> :    <span class="string">"&#123;type&#125;"</span>,</span><br><span class="line">    <span class="string">"_id"</span> :      <span class="string">"&#123;id&#125;"</span>,</span><br><span class="line">    <span class="string">"_version"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="string">"found"</span> :    true, //是否找到，<span class="number">404</span>同步返回</span><br><span class="line">    <span class="string">"_source"</span> :  &#123;</span><br><span class="line">        <span class="string">"field1"</span>: <span class="string">"value"</span>,</span><br><span class="line">        <span class="string">"field2"</span>: <span class="string">"value"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="u68C0_u67E5_u6587_u6863_u662F_u5426_u5B58_u5728"><a href="#u68C0_u67E5_u6587_u6863_u662F_u5426_u5B58_u5728" class="headerlink" title="检查文档是否存在"></a>检查文档是否存在</h4><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">HEAD</span> /&#123;index&#125;/&#123;<span class="typedef"><span class="keyword">type</span>&#125;/<span class="container">&#123;id&#125;</span></span></span><br></pre></td></tr></table></figure>
<h4 id="u66F4_u65B0_u6587_u6863_u7684_u65F6_u5019_uFF0C_u5199_u6CD5_u548C_u63D2_u5165_u65F6_u76F8_u540C"><a href="#u66F4_u65B0_u6587_u6863_u7684_u65F6_u5019_uFF0C_u5199_u6CD5_u548C_u63D2_u5165_u65F6_u76F8_u540C" class="headerlink" title="更新文档的时候，写法和插入时相同"></a>更新文档的时候，写法和插入时相同</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_version会递增</span><br></pre></td></tr></table></figure>
<h4 id="u521B_u5EFA_u6587_u6863_uFF0C_u6210_u529F_u521B_u5EFA_u7684_u65F6_u5019_uFF0C_u8FD4_u56DE201_uFF0C_u5931_u8D25_u8FD4_u56DE409"><a href="#u521B_u5EFA_u6587_u6863_uFF0C_u6210_u529F_u521B_u5EFA_u7684_u65F6_u5019_uFF0C_u8FD4_u56DE201_uFF0C_u5931_u8D25_u8FD4_u56DE409" class="headerlink" title="创建文档，成功创建的时候，返回201，失败返回409"></a>创建文档，成功创建的时候，返回201，失败返回409</h4><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">PUT</span> /&#123;index&#125;/&#123;<span class="typedef"><span class="keyword">type</span>&#125;/<span class="container">&#123;id&#125;</span>?op_type=create</span></span><br><span class="line"><span class="type">PUT</span> /&#123;index&#125;/&#123;<span class="typedef"><span class="keyword">type</span>&#125;/<span class="container">&#123;id&#125;</span>/_create</span></span><br></pre></td></tr></table></figure>
<h4 id="u5220_u9664_u6587_u6863_uFF0C_u5931_u8D25_u8FD4_u56DE404"><a href="#u5220_u9664_u6587_u6863_uFF0C_u5931_u8D25_u8FD4_u56DE404" class="headerlink" title="删除文档，失败返回404"></a>删除文档，失败返回404</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">DELETE</span> /&#123;<span class="keyword">index</span>&#125;/&#123;<span class="keyword">type</span>&#125;/&#123;<span class="keyword">id</span>&#125;</span></span><br></pre></td></tr></table></figure>
<h4 id="u66F4_u65B0_u67D0_u4E2A_u7279_u5B9A_u7248_u672C_u7684_u6587_u6863_uFF0C_u7528_u4E8E_u63A7_u5236_u5E76_u53D1_u9519_u8BEF_uFF0Cversion_type_u8BBE_u7F6E_u4E86_u7528_u6B64_u65F6_u7684version_u6765_u8BBE_u7F6E_u6587_u6863_u7684version"><a href="#u66F4_u65B0_u67D0_u4E2A_u7279_u5B9A_u7248_u672C_u7684_u6587_u6863_uFF0C_u7528_u4E8E_u63A7_u5236_u5E76_u53D1_u9519_u8BEF_uFF0Cversion_type_u8BBE_u7F6E_u4E86_u7528_u6B64_u65F6_u7684version_u6765_u8BBE_u7F6E_u6587_u6863_u7684version" class="headerlink" title="更新某个特定版本的文档，用于控制并发错误，version_type设置了用此时的version来设置文档的version"></a>更新某个特定版本的文档，用于控制并发错误，version_type设置了用此时的version来设置文档的version</h4><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">PUT</span> /&#123;index&#125;/&#123;<span class="typedef"><span class="keyword">type</span>&#125;/<span class="container">&#123;id&#125;</span>?version=<span class="container">&#123;version&#125;</span></span></span><br><span class="line"><span class="type">PUT</span> /&#123;index&#125;/&#123;<span class="typedef"><span class="keyword">type</span>&#125;/<span class="container">&#123;id&#125;</span>?version=<span class="container">&#123;version&#125;</span>&amp;version_type=external</span></span><br></pre></td></tr></table></figure>
<h4 id="u66F4_u65B0_u6587_u6863_u7684_u90E8_u5206_u5185_u5BB9_uFF0C_u5408_u5E76_u6587_u6863"><a href="#u66F4_u65B0_u6587_u6863_u7684_u90E8_u5206_u5185_u5BB9_uFF0C_u5408_u5E76_u6587_u6863" class="headerlink" title="更新文档的部分内容，合并文档"></a>更新文档的部分内容，合并文档</h4><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST /&#123;index&#125;/&#123;type&#125;/&#123;id&#125;/_<span class="keyword">update</span></span><br></pre></td></tr></table></figure>
<h4 id="u811A_u672C_u662F_u4E00_u4E9B_u5947_u602A_u7684_u903B_u8F91_uFF0C_u4E0D_u8FC7_u86EE_u597D_u73A9_u7684_u3002"><a href="#u811A_u672C_u662F_u4E00_u4E9B_u5947_u602A_u7684_u903B_u8F91_uFF0C_u4E0D_u8FC7_u86EE_u597D_u73A9_u7684_u3002" class="headerlink" title="脚本是一些奇怪的逻辑，不过蛮好玩的。"></a>脚本是一些奇怪的逻辑，不过蛮好玩的。</h4><h4 id="u68C0_u7D22_u591A_u4E2A_u6587_u6863"><a href="#u68C0_u7D22_u591A_u4E2A_u6587_u6863" class="headerlink" title="检索多个文档"></a>检索多个文档</h4><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">POST /_mget</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"docs"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="u6279_u91CF_u64CD_u4F5C_uFF0C_u4EE5_u6362_u884C_u7B26_u6765_u5224_u65AD_uFF0C_u9632_u6B62_u4E0D_u5FC5_u8981_u7684json_u89E3_u6790_u7B49_u6570_u636E_u62F7_u8D1D_u3002"><a href="#u6279_u91CF_u64CD_u4F5C_uFF0C_u4EE5_u6362_u884C_u7B26_u6765_u5224_u65AD_uFF0C_u9632_u6B62_u4E0D_u5FC5_u8981_u7684json_u89E3_u6790_u7B49_u6570_u636E_u62F7_u8D1D_u3002" class="headerlink" title="批量操作，以换行符来判断，防止不必要的json解析等数据拷贝。"></a>批量操作，以换行符来判断，防止不必要的json解析等数据拷贝。</h4><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST /_bulk</span><br><span class="line">&#123; action: &#123;metadata &#125;&#125; \n</span><br><span class="line">&#123; request body &#125; \n</span><br><span class="line">&#123; action: &#123;metadata &#125;&#125; \n</span><br><span class="line">&#123; request body &#125; \n</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="u6DFB_u52A0_u6587_u6863_2C_u81EA_u5B9A_u4E49ID"><a href="#u6DFB_u52A0_u6587_u6863_2C_u81EA_u5B9A_u4E49ID" class="headerlink" title="]]>
    </summary>
    
      <category term="elasticsearch" scheme="http://catlittlechen.com/tags/elasticsearch/"/>
    
      <category term="学习" scheme="http://catlittlechen.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="elasticsearch" scheme="http://catlittlechen.com/categories/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[elasticsearch系列笔记(二) 集群安装]]></title>
    <link href="http://catlittlechen.com/2016/08/02/es2/"/>
    <id>http://catlittlechen.com/2016/08/02/es2/</id>
    <published>2016-08-02T12:06:33.000Z</published>
    <updated>2017-03-25T14:01:12.000Z</updated>
    <content type="html"><![CDATA[<h3 id="two_es"><a href="#two_es" class="headerlink" title="two es"></a>two es</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="command">run</span> -ti <span class="comment">--name es1 elasticsearch /bin/bash</span></span><br><span class="line">docker <span class="command">run</span> -ti <span class="comment">--name es2 elasticsearch /bin/bash</span></span><br></pre></td></tr></table></figure>
<h3 id="config"><a href="#config" class="headerlink" title="config"></a>config</h3><h4 id="in_es1"><a href="#in_es1" class="headerlink" title="in es1"></a>in es1</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/elasticsearch/elasticsearch<span class="class">.yml</span></span><br><span class="line">   cluster<span class="class">.name</span>: elasticsearch-cluster-centos</span><br><span class="line">   node<span class="class">.name</span>: <span class="string">"es-node1"</span></span><br><span class="line">   bootstrap<span class="class">.mlockall</span>: true</span><br><span class="line">   network<span class="class">.host</span>: <span class="number">172.17</span>.<span class="number">0.2</span></span><br><span class="line">   network<span class="class">.publish_host</span>: <span class="number">172.17</span>.<span class="number">0.2</span></span><br><span class="line">   discovery<span class="class">.zen</span><span class="class">.ping</span><span class="class">.unicast</span><span class="class">.hosts</span>: [<span class="string">"172.17.0.3"</span>]</span><br></pre></td></tr></table></figure>
<h4 id="in_es2"><a href="#in_es2" class="headerlink" title="in es2"></a>in es2</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cluster<span class="class">.name</span>: elasticsearch-cluster-centos</span><br><span class="line">node<span class="class">.name</span>: <span class="string">"es-node2"</span></span><br><span class="line">bootstrap<span class="class">.mlockall</span>: true</span><br><span class="line">network<span class="class">.host</span>: <span class="number">172.17</span>.<span class="number">0.3</span></span><br><span class="line">network<span class="class">.publish_host</span>: <span class="number">172.17</span>.<span class="number">0.3</span></span><br><span class="line">discovery<span class="class">.zen</span><span class="class">.ping</span><span class="class">.unicast</span><span class="class">.hosts</span>: [<span class="string">"172.17.0.2"</span>]</span><br></pre></td></tr></table></figure>
<h3 id="restart"><a href="#restart" class="headerlink" title="restart"></a>restart</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/etc/i</span>nit.d<span class="regexp">/elasticsearch restart</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="two_es"><a href="#two_es" class="headerlink" title="two es"></a>two es</h3><figure class="highlight applescript"><table><tr><td clas]]>
    </summary>
    
      <category term="elasticsearch" scheme="http://catlittlechen.com/tags/elasticsearch/"/>
    
      <category term="学习" scheme="http://catlittlechen.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="elasticsearch" scheme="http://catlittlechen.com/categories/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[elasticsearch系列笔记(一) 基础知识]]></title>
    <link href="http://catlittlechen.com/2016/08/01/es1/"/>
    <id>http://catlittlechen.com/2016/08/01/es1/</id>
    <published>2016-08-01T11:26:21.000Z</published>
    <updated>2017-03-25T14:03:15.000Z</updated>
    <content type="html"><![CDATA[<h3 id="install"><a href="#install" class="headerlink" title="install"></a>install</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">启动docker</span><br><span class="line">docker run -ti <span class="comment">--name es -p 9200:9200 ubuntu:14.04 /bin/bash</span></span><br><span class="line"></span><br><span class="line">更新系统</span><br><span class="line">apt-get <span class="operator"><span class="keyword">update</span></span><br><span class="line">apt-<span class="keyword">get</span> <span class="keyword">upgrade</span></span><br><span class="line">apt-<span class="keyword">get</span> <span class="keyword">install</span> software-properties-common</span><br><span class="line"></span><br><span class="line">安装<span class="keyword">java</span></span><br><span class="line"><span class="keyword">add</span>-apt-repository ppa:webupd8team/<span class="keyword">java</span></span><br><span class="line">apt-<span class="keyword">get</span> <span class="keyword">update</span></span><br><span class="line">apt-<span class="keyword">get</span> <span class="keyword">install</span> <span class="keyword">oracle</span>-java8-installer</span><br><span class="line"></span><br><span class="line">安装es</span><br><span class="line">wget -qO - https://packages.elastic.co/GPG-<span class="keyword">KEY</span>-elasticsearch | sudo apt-<span class="keyword">key</span> <span class="keyword">add</span> -</span><br><span class="line">echo <span class="string">"deb https://packages.elastic.co/elasticsearch/2.x/debian stable main"</span> &gt;&gt; /etc/apt/sources.<span class="keyword">list</span></span><br><span class="line">apt-<span class="keyword">get</span> <span class="keyword">update</span> &amp;&amp; apt-<span class="keyword">get</span> <span class="keyword">install</span> elasticsearch</span><br><span class="line"><span class="keyword">update</span>-rc.<span class="keyword">d</span> elasticsearch <span class="keyword">defaults</span> <span class="number">95</span> <span class="number">10</span></span><br><span class="line">/etc/init.<span class="keyword">d</span>/elasticsearch <span class="keyword">start</span></span></span><br></pre></td></tr></table></figure>
<h3 id="test"><a href="#test" class="headerlink" title="test"></a>test</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">curl</span> -X GET <span class="string">'http://172.17.0.2:9200'</span></span><br></pre></td></tr></table></figure>
<h3 id="install_marvel"><a href="#install_marvel" class="headerlink" title="install marvel"></a>install marvel</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>share<span class="regexp">/elasticsearch/</span>bin<span class="regexp">/plugin -i elasticsearch/</span>marvel/latest</span><br><span class="line"><span class="regexp">/etc/</span>init.d/elasticsearch restart</span><br></pre></td></tr></table></figure>
<h3 id="api"><a href="#api" class="headerlink" title="api"></a>api</h3><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">curl -X&lt;VERB&gt; '&lt;PROTOCOL&gt;:<span class="comment">//&lt;HOST&gt;:&lt;PORT&gt;/&lt;PATH&gt;?&lt;QUERY_STRING&gt;' -d '&lt;BODY&gt;'</span></span><br><span class="line">example :</span><br><span class="line">    curl -XGET <span class="string">'http</span>:<span class="comment">//172.17.0.2:9200/_count?pretty' -d '</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"query"</span>: &#123;</span><br><span class="line">                <span class="string">"match_all"</span>: &#123;&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    '</span><br><span class="line">    curl -XPUT <span class="string">'http</span>:<span class="comment">//172.17.0.2:9200/megacorp/employee/1?pretty' -d '</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"first_name"</span> : <span class="string">"John"</span>,</span><br><span class="line">            <span class="string">"last_name"</span> :  <span class="string">"Smith"</span>,</span><br><span class="line">            <span class="string">"age"</span> :        <span class="number">25</span>,</span><br><span class="line">            <span class="string">"about"</span> :      <span class="string">"I love to go rock climbing"</span>,</span><br><span class="line">            <span class="string">"interests"</span>: [ <span class="string">"sports"</span>, <span class="string">"music"</span> ]</span><br><span class="line">        &#125;</span><br><span class="line">    '</span><br><span class="line">    curl -XGET <span class="string">'http</span>:<span class="comment">//172.17.0.2:9200/megacorp/employee/1?pretty'</span></span><br><span class="line">    curl -XGET <span class="string">'http</span>:<span class="comment">//172.17.0.2:9200/megacorp/employee/_search?pretty'</span></span><br><span class="line">    curl -XGET <span class="string">'http</span>:<span class="comment">//172.17.0.2:9200/megacorp/employee/_search?pretty&amp;q=last_name:Smith'</span></span><br><span class="line">    curl -XGET <span class="string">'http</span>:<span class="comment">//172.17.0.2:9200/megacorp/employee/_search?pretty' -d '</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"query"</span>: &#123;</span><br><span class="line">                <span class="string">"match"</span>: &#123;</span><br><span class="line">                    <span class="string">"last_name"</span>: <span class="string">"Smith"</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    '</span><br><span class="line">    curl -XGET <span class="string">'http</span>:<span class="comment">//172.17.0.2:9200/megacorp/employee/_search?pretty' -d '</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"query"</span>: &#123;</span><br><span class="line">                <span class="string">"filtered"</span>: &#123;</span><br><span class="line">                    <span class="string">"filter"</span>: &#123;</span><br><span class="line">                        <span class="string">"range"</span>: &#123;</span><br><span class="line">                            <span class="string">"age"</span>: &#123; <span class="string">"gt"</span>: <span class="number">20</span> &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="string">"query"</span>: &#123;</span><br><span class="line">                        <span class="string">"match"</span>: &#123;</span><br><span class="line">                            <span class="string">"last_name"</span>: <span class="string">"Smith"</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    '</span><br><span class="line">    curl -XGET <span class="string">'http</span>:<span class="comment">//172.17.0.2:9200/megacorp/employee/_search?pretty' -d '</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"query"</span> : &#123;</span><br><span class="line">                <span class="string">"match"</span> : &#123;</span><br><span class="line">                    <span class="string">"about"</span> : <span class="string">"rock climbing"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    '</span><br><span class="line">    curl -XGET <span class="string">'http</span>:<span class="comment">//172.17.0.2:9200/megacorp/employee/_search?pretty' -d '</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"query"</span> : &#123;</span><br><span class="line">                <span class="string">"match_phrase"</span> : &#123;</span><br><span class="line">                    <span class="string">"about"</span> : <span class="string">"rock climbing"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    '</span><br><span class="line">    curl -XGET <span class="string">'http</span>:<span class="comment">//172.17.0.2:9200/megacorp/employee/_search?pretty' -d '</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"query"</span> : &#123;</span><br><span class="line">                <span class="string">"match_phrase"</span> : &#123;</span><br><span class="line">                    <span class="string">"about"</span> : <span class="string">"rock climbing"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"highlight"</span>: &#123;</span><br><span class="line">                <span class="string">"fields"</span>: &#123;</span><br><span class="line">                    <span class="string">"about"</span>: &#123;&#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    '</span><br><span class="line">    curl -XGET <span class="string">'http</span>:<span class="comment">//172.17.0.2:9200/megacorp/employee/_search?pretty' -d '</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"aggs"</span>: &#123;</span><br><span class="line">                <span class="string">"all_interests"</span>: &#123;</span><br><span class="line">                    <span class="string">"terms"</span>: &#123; <span class="string">"field"</span>: <span class="string">"interests"</span> &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    '</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="install"><a href="#install" class="headerlink" title="install"></a>install</h3><figure class="highlight sql"><table><tr><td class="g]]>
    </summary>
    
      <category term="elasticsearch" scheme="http://catlittlechen.com/tags/elasticsearch/"/>
    
      <category term="学习" scheme="http://catlittlechen.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="elasticsearch" scheme="http://catlittlechen.com/categories/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[docker-swarm]]></title>
    <link href="http://catlittlechen.com/2016/07/22/docker-swarm/"/>
    <id>http://catlittlechen.com/2016/07/22/docker-swarm/</id>
    <published>2016-07-22T14:51:48.000Z</published>
    <updated>2017-03-25T13:58:55.000Z</updated>
    <content type="html"><![CDATA[<p>前段时间，我和公司的运维朋友一起玩了下docker。在配置docker-swarm的时候，运维朋友可以安逸地开启aws，可怜的我只能默默地在自己的单机上面搭建了~~</p>
<p>所以，才有了今天在用docker-machine来搭建docker-swarm，这份教程基本是按照docker-swram的官方教程改的~</p>
<h4 id="u521B_u5EFAdocker-machine"><a href="#u521B_u5EFAdocker-machine" class="headerlink" title="创建docker-machine"></a>创建docker-machine</h4><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker-machine <span class="built_in">create</span> <span class="comment">--driver virtualbox consul</span></span><br><span class="line">docker-machine <span class="built_in">create</span> <span class="comment">--driver virtualbox manager1</span></span><br><span class="line">docker-machine <span class="built_in">create</span> <span class="comment">--driver virtualbox manager2</span></span><br><span class="line">docker-machine <span class="built_in">create</span> <span class="comment">--driver virtualbox node1</span></span><br><span class="line">docker-machine <span class="built_in">create</span> <span class="comment">--driver virtualbox node2</span></span><br></pre></td></tr></table></figure>
<h4 id="u914D_u7F6Econsul"><a href="#u914D_u7F6Econsul" class="headerlink" title="配置consul"></a>配置consul</h4><p>切换到consul虚机里面：</p>
<figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span> <span class="variable">$(</span>docker-machine <span class="keyword">env</span> consul)</span><br></pre></td></tr></table></figure>
<p>启动consul服务：</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span> -<span class="keyword">d</span> -p 8500:8500 --name=consul progrium/consul -server -<span class="keyword">bootstrap</span></span><br></pre></td></tr></table></figure>
<h4 id="u914D_u7F6Emanager_u8282_u70B9"><a href="#u914D_u7F6Emanager_u8282_u70B9" class="headerlink" title="配置manager节点"></a>配置manager节点</h4><p>配置manager1节点：</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eval $(docker-machine env manager1)</span><br><span class="line">docker run -d -p <span class="number">4000</span>:<span class="number">4000</span> -v <span class="regexp">/var/</span>lib<span class="regexp">/boot2docker:/</span><span class="string">certs:</span>ro swarm manage -<span class="string">H :</span><span class="number">4000</span> --tlsverify --tlscacert=<span class="regexp">/certs/</span>ca.pem --tlscert=<span class="regexp">/certs/</span>server.pem --tlskey=<span class="regexp">/certs/</span>server-key.pem --replication --advertise $(docker-machine ip manager1):<span class="number">4000</span> <span class="string">consul:</span><span class="comment">//$(docker-machine ip consul):8500</span></span><br></pre></td></tr></table></figure>
<p>配置manager2节点：</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eval $(docker-machine env manager2)</span><br><span class="line">docker run -d -p <span class="number">4000</span>:<span class="number">4000</span> -v <span class="regexp">/var/</span>lib<span class="regexp">/boot2docker:/</span><span class="string">certs:</span>ro swarm manage -<span class="string">H :</span><span class="number">4000</span> --tlsverify --tlscacert=<span class="regexp">/certs/</span>ca.pem --tlscert=<span class="regexp">/certs/</span>server.pem --tlskey=<span class="regexp">/certs/</span>server-key.pem --replication --advertise $(docker-machine ip manager2):<span class="number">4000</span> <span class="string">consul:</span><span class="comment">//$(docker-machine ip consul):8500</span></span><br></pre></td></tr></table></figure>
<h4 id="u914D_u7F6Enode_u8282_u70B9"><a href="#u914D_u7F6Enode_u8282_u70B9" class="headerlink" title="配置node节点"></a>配置node节点</h4><p>配置node1节点</p>
<figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span> <span class="variable">$(</span>docker-machine <span class="keyword">env</span> node1)</span><br><span class="line">docker run -d swarm join --advertise=<span class="variable">$(</span>docker-machine ip node1):<span class="number">2376</span> consul:<span class="comment">//$(docker-machine ip consul):8500</span></span><br></pre></td></tr></table></figure>
<p>配置node2节点</p>
<figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span> <span class="variable">$(</span>docker-machine <span class="keyword">env</span> node2)</span><br><span class="line">docker run -d swarm join --advertise=<span class="variable">$(</span>docker-machine ip node2):<span class="number">2376</span> consul:<span class="comment">//$(docker-machine ip consul):8500</span></span><br></pre></td></tr></table></figure>
<h3 id="u6D4B_u8BD5"><a href="#u6D4B_u8BD5" class="headerlink" title="测试"></a>测试</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -<span class="string">H :</span><span class="number">4000</span> --tlsverify --tlscacert=<span class="regexp">/var/</span>lib<span class="regexp">/boot2docker/</span>ca.pem --tlscert=<span class="regexp">/var/</span>lib<span class="regexp">/boot2docker/</span>server.pem --tlskey=<span class="regexp">/var/</span>lib<span class="regexp">/boot2docker/</span>server-key.pem run hello-world</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>前段时间，我和公司的运维朋友一起玩了下docker。在配置docker-swarm的时候，运维朋友可以安逸地开启aws，可怜的我只能默默地在自己的单机上面搭建了~~</p>
<p>所以，才有了今天在用docker-machine来搭建docker-swarm，这份教程基本是]]>
    </summary>
    
      <category term="docker" scheme="http://catlittlechen.com/tags/docker/"/>
    
      <category term="docker" scheme="http://catlittlechen.com/categories/docker/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[思考]]></title>
    <link href="http://catlittlechen.com/2016/06/23/%E6%80%9D%E8%80%83/"/>
    <id>http://catlittlechen.com/2016/06/23/思考/</id>
    <published>2016-06-23T02:24:20.000Z</published>
    <updated>2016-06-23T07:01:36.000Z</updated>
    <content type="html"><![CDATA[<p>从06-09开始，准备写这一篇文章，那天是端午节，在宿舍里面看G3，期待詹姆斯可以赢得这一场比赛，避免被横扫的命运。从那天起，在上班的时候，总是偷偷地看着NBA的文字直播，见证了41-41的G5，爆发的G6，到最后的G7时，我偷偷地带上了耳机，在mac上听起了直播，听完了G7和最后的发布会。也许竞技体育的魅力就在与此，一切皆有可能。06-20，骑士和勇士创造了很多历史，不过是成功夺冠的骑士，还是73胜的勇士，都是一样的伟大。</p>
<p>那一天的发布会上，有位记者问詹姆斯，这次的夺冠和之前的夺冠相比，有什么不同的感受，詹姆斯是这么回答的，“I’m home!”。</p>
<p>这感觉，真好。自从毕业之后，总是少了一点什么，大概也有这个吧。读书时，父母的期望时可以拿到很好的排名和好看的成绩单。那时的我，也没什么想法，只是多看看书，当然，虽然更多的是课外书，但是也是在保持足够的竞争力下。不需要十分刻意地去追求前多少名的成绩，不需要去思考提高语文英语的成绩来弥补短板。那段日子里，我学了很多我想学的知识，通过书籍，去了解很多人的人生。在满足家人和自己的世界里，我活出了自己想要的生活。而如今我顺利地毕业了，成为了一个程序员。但这真的是我想要的么？</p>
<p>我知道不是。</p>
<p>上了社会，虽然作为程序员拿到的工资辉比较高，但是突然发现，在北上广深的世界里，自己所能赚到的工资还是太低太低了。当然，作为一个出入社会的毕业生，自己所能创造的价值实际上也不是很多。很高兴的是，我一再的提醒自己，要守住本心，靠着自己的实力和努力去换取生活的资本。</p>
<p>感谢我小学的老师，教会了我仔细，而我的母亲，则教会了我学会耐心。让我在如此漫长地人生中，学会了成长。而我也很清楚地知道，自己喜欢的是数学，对数字天生的敏感。也许在程序员的领域里面，我更喜欢大数据，或者是人工智能，而不是写业务。我更喜欢知道一个东西为什么这么设计，而不是知道这么东西怎么用。</p>
<p>2016-06-23，一年前，我从大学毕业，用了任性地方式给了自己一份很好的毕业礼物。一年后，我开始反思，我应该自己学习，好好地深入理解后端，去知道更多的为什么，还是应该创作属于自己的作品。</p>
<p>也许其他人无法明白，为什么我不喜欢成功，不喜欢大公司好前景。也许我渴望的自由生活，本就是没有目标的吧。所谓的骄傲，就是靠自己和团队的努力，所获得的成就。希望好好努力，未来会好，世界会更好。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>从06-09开始，准备写这一篇文章，那天是端午节，在宿舍里面看G3，期待詹姆斯可以赢得这一场比赛，避免被横扫的命运。从那天起，在上班的时候，总是偷偷地看着NBA的文字直播，见证了41-41的G5，爆发的G6，到最后的G7时，我偷偷地带上了耳机，在mac上听起了直播，听完了G]]>
    </summary>
    
      <category term="生活" scheme="http://catlittlechen.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="活着" scheme="http://catlittlechen.com/categories/%E6%B4%BB%E7%9D%80/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[multinet]]></title>
    <link href="http://catlittlechen.com/2016/05/20/multinet/"/>
    <id>http://catlittlechen.com/2016/05/20/multinet/</id>
    <published>2016-05-20T06:07:22.000Z</published>
    <updated>2017-03-25T14:14:13.000Z</updated>
    <content type="html"><![CDATA[<h4 id="u8D77_u56E0"><a href="#u8D77_u56E0" class="headerlink" title="起因"></a>起因</h4><p>之前一段时间发现自己用go开发程序的过程中，大部分的时间都是用了标准的HTTP库，而没用到其他方式，比如单纯的TCP。在查看了go的标准库后，发现这个TCP库并没有想象中的好用，因此，我自己开始着手写一个好用点的。</p>
<h4 id="u7ECF_u8FC7"><a href="#u7ECF_u8FC7" class="headerlink" title="经过"></a>经过</h4><p>在解决黏包的问题时，曾经尝试运用go标准库中的json库，将数据打包成为一个结构体的方式，确实时解决了黏包的问题，但是由于go的json库效率不高，整体的效率下下降了2-3倍。最后使用了最简单的模式，通过添加head的方式，达到得知传输的data的长度，进而解决了黏包的问题，而且效率上的影响可以忽略不计。</p>
<p>在解决了黏包的问题之后，我也通过控制代理的模式，发现在高并发的情况下，也许服务端同时需要多次创建or关闭TCP连接，来达到通讯的目的。而实际TCP的使用中，或许大部分时间内，会有TCP连接处于空闲的阶段，那是否可以复用呢？</p>
<p>因此，在multinet中，在一条TCP Connetion被创建的时候，调用库将同时创建n条连接，n为可配置参数。之后返回一个虚拟Conn供代码调用。在实际写入的过程中，conn在接收到调用者的写入之后，空闲的tcp连接会接受这个请求，将数据传给目标，而目标连接会根据读取的数据，分配给指定的虚拟Conn。</p>
<p>在传输的过程中，TCP连接们，会在连接数过少，数据拥挤的时候，自动地创建新的连接来处理数据，当然，服务端也会反馈数据拥挤问题给客户端，让他创建新的连接。当然，这种方式还是比较简单粗暴的～～</p>
<h3 id="u7ED3_u679C"><a href="#u7ED3_u679C" class="headerlink" title="结果"></a>结果</h3><p>一个写着玩的项目，multinet，目前放在了我的github上。地址见右上，在那个也许还没发现的地方。哈哈。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="u8D77_u56E0"><a href="#u8D77_u56E0" class="headerlink" title="起因"></a>起因</h4><p>之前一段时间发现自己用go开发程序的过程中，大部分的时间都是用了标准的HTTP库，而没用到其他方式，比如]]>
    </summary>
    
      <category term="golang" scheme="http://catlittlechen.com/tags/golang/"/>
    
      <category term="golang" scheme="http://catlittlechen.com/categories/golang/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[golang的debug方式]]></title>
    <link href="http://catlittlechen.com/2016/01/27/golang%E7%9A%84debug%E6%96%B9%E5%BC%8F/"/>
    <id>http://catlittlechen.com/2016/01/27/golang的debug方式/</id>
    <published>2016-01-27T12:11:03.000Z</published>
    <updated>2017-03-25T14:13:51.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u534F_u7A0B"><a href="#u534F_u7A0B" class="headerlink" title="协程"></a>协程</h2><p>协程是轻量级的线程，在Go语言中对应着goroutine，由Go Runtime管理。由于Go在运行的过程中，如果多个goroutine在同时运行，当且仅当运行这个goroutine的线程被阻塞的时候，调度器也才会运行另外的goroutine。</p>
<h3 id="u8FD9_u5C31_u610F_u5473_u7740"><a href="#u8FD9_u5C31_u610F_u5473_u7740" class="headerlink" title="这就意味着"></a>这就意味着</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">go <span class="function"><span class="keyword">func</span><span class="params">()</span> &#123;</span></span><br><span class="line">	<span class="keyword">for</span> &#123;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;()</span><br></pre></td></tr></table></figure>
<p>这种函数被调用之后，这个goroutine会长期霸占着线程，而其它goroutine就只能饿死在内存中。<br>这种情况下，通过strace -f去跟踪系统调用的debug方式，是无法获取正确的信息。</p>
<h3 id="kill_u5927_u6CD5"><a href="#kill_u5927_u6CD5" class="headerlink" title="kill大法"></a>kill大法</h3><p>Go程序在默认的信号处理中，如果收到了<em>SIGQUIT</em>的信号时，会将正在运行时的goroutine的调用栈输出。即：</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -3 <span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br></pre></td></tr></table></figure>
<p>然后知道，自己是怎么坑自己的！</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u534F_u7A0B"><a href="#u534F_u7A0B" class="headerlink" title="协程"></a>协程</h2><p>协程是轻量级的线程，在Go语言中对应着goroutine，由Go Runtime管理。由于Go在运行的过]]>
    </summary>
    
      <category term="golang" scheme="http://catlittlechen.com/tags/golang/"/>
    
      <category term="golang" scheme="http://catlittlechen.com/categories/golang/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[记一次debug的坑]]></title>
    <link href="http://catlittlechen.com/2015/11/20/%E8%AE%B0%E4%B8%80%E6%AC%A1debug%E7%9A%84%E5%9D%91/"/>
    <id>http://catlittlechen.com/2015/11/20/记一次debug的坑/</id>
    <published>2015-11-20T03:57:00.000Z</published>
    <updated>2017-03-25T14:24:27.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u611F_u609F"><a href="#u611F_u609F" class="headerlink" title="感悟"></a>感悟</h2><p>这个故事告诉我们，永远不要相信自己的眼睛。</p>
<h2 id="u90A3_u5929"><a href="#u90A3_u5929" class="headerlink" title="那天"></a>那天</h2><p>天气晴朗，阳光明媚~<br>我用Go写了一段程序，程序中需要通过从文件中读取一段文字，然后拼入sql中，然后在数据库中执行。</p>
<p>由于我需要从文件中一行一行的读出数据，我用了这样子的方式读取。</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">func readLines(path string) (lines []string, <span class="keyword">err</span> <span class="keyword">error</span>) &#123;</span><br><span class="line">       <span class="keyword">var</span> (</span><br><span class="line">           <span class="keyword">file</span>   *os.<span class="keyword">File</span></span><br><span class="line">           part   []byte</span><br><span class="line">           prefix bool</span><br><span class="line">       )</span><br><span class="line">       <span class="keyword">if</span> <span class="keyword">file</span>, <span class="keyword">err</span> = os.<span class="keyword">Open</span>(path); <span class="keyword">err</span> != nil &#123;</span><br><span class="line">           <span class="literal">return</span></span><br><span class="line">       &#125;</span><br><span class="line">       reader := bufio.NewReader(<span class="keyword">file</span>)</span><br><span class="line">       buffer := bytes.NewBuffer(make([]byte, 1024))</span><br><span class="line">       <span class="keyword">for</span> &#123;</span><br><span class="line">           <span class="keyword">if</span> part, prefix, <span class="keyword">err</span> = reader.ReadLine(); <span class="keyword">err</span> != nil &#123;</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">           &#125;</span><br><span class="line">           buffer.Write(part)</span><br><span class="line">           <span class="keyword">if</span> !prefix &#123;</span><br><span class="line">               lines = <span class="keyword">append</span>(lines, buffer.<span class="literal">String</span>())</span><br><span class="line">               buffer.Reset()</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span> <span class="keyword">err</span> == io.EOF &#123;</span><br><span class="line">           <span class="keyword">err</span> = nil</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="literal">return</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<p>调用的时候，我通过用了大概如下的代码：</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">lines， <span class="keyword">err</span> := readLines(userFile)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">err</span> != nil &#123;</span><br><span class="line">	<span class="literal">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _, <span class="keyword">line</span> := <span class="keyword">range</span> lines &#123;</span><br><span class="line">	sqlStr := rawSql % <span class="keyword">line</span></span><br><span class="line">	_, <span class="keyword">err</span> = dbConn.Exec(sqlStr)</span><br><span class="line">	<span class="keyword">if</span> <span class="keyword">err</span> != nil &#123;</span><br><span class="line">		<span class="literal">return</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当然它报错了！这样子的错误信息~</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error <span class="number">1064</span>: You have <span class="operator">an</span> error <span class="operator">in</span> your SQL syntax; check <span class="operator">the</span> manual that corresponds <span class="built_in">to</span> your MySQL server <span class="built_in">version</span> <span class="keyword">for</span> <span class="operator">the</span> <span class="constant">right</span> syntax <span class="built_in">to</span> use near <span class="string">''</span> <span class="keyword">at</span> <span class="built_in">line</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>通过查阅，我发现这个near ‘’，是的竟然是空的，不像一般的写错sql语句一样是会写明错误信息~<br>瞬间我就神经开始大条了。</p>
<pre><code>难道我后面写漏了什么？
怎么可能！
不，我得先去喝杯水，然后再来看看。
水果到了，再吃个苹果。
吃完洗个手-。-
我觉得没错啊！
F**k
</code></pre><h2 id="u7ED3_u5C40"><a href="#u7ED3_u5C40" class="headerlink" title="结局"></a>结局</h2><p>不玩了，之所以我会认为自己没错，是因为我将整个sql语句打印了出来，在肉眼确认没错之后，又去mysql得命令行中直接执行了语句，结果十分顺利。<br>最后，十分大条的将从文件中读取出来的lines用长度打印了出来，瞬间我就斯巴达了！  </p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> _, <span class="built_in">line</span> := range <span class="keyword">lines</span> &#123;</span><br><span class="line">	fmt.Printf(<span class="string">"len[%s] is %d"</span>, <span class="built_in">line</span>, <span class="built_in">len</span>(<span class="built_in">line</span>))</span><br><span class="line">	sqlStr := rawSql % <span class="built_in">line</span></span><br><span class="line">	fmt.Printf(<span class="string">"sqlStr[%s] is %d"</span>, <span class="built_in">line</span>, <span class="built_in">len</span>(sqlStr))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>结果。。。</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">len[<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>] is 1024!</span><br><span class="line">sqlStr[<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>] is 1065!</span><br></pre></td></tr></table></figure>
<p>这就是为什么我执行失败的原因！sqlStr里面，存在着一段空白的buffer！却是打印不出来的~<br>最后我把代码改成了这样~</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data, <span class="keyword">err</span> = ioutil.ReadAll(userFile)</span><br><span class="line">   <span class="keyword">if</span> <span class="keyword">err</span> != nil &#123;</span><br><span class="line">	<span class="literal">return</span></span><br><span class="line">&#125;</span><br><span class="line">lines := strings.<span class="keyword">Split</span>(<span class="literal">string</span>(data), <span class="string">"\n"</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Done"><a href="#Done" class="headerlink" title="Done"></a>Done</h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u611F_u609F"><a href="#u611F_u609F" class="headerlink" title="感悟"></a>感悟</h2><p>这个故事告诉我们，永远不要相信自己的眼睛。</p>
<h2 id="u90A3_u5929"><a hr]]>
    </summary>
    
      <category term="golang" scheme="http://catlittlechen.com/tags/golang/"/>
    
      <category term="踩坑日记" scheme="http://catlittlechen.com/tags/%E8%B8%A9%E5%9D%91%E6%97%A5%E8%AE%B0/"/>
    
      <category term="golang" scheme="http://catlittlechen.com/categories/golang/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[仅仅]]></title>
    <link href="http://catlittlechen.com/2015/11/13/%E4%BB%85%E4%BB%85/"/>
    <id>http://catlittlechen.com/2015/11/13/仅仅/</id>
    <published>2015-11-13T13:12:01.000Z</published>
    <updated>2016-01-27T11:34:19.000Z</updated>
    <content type="html"><![CDATA[<p>独自一人<br>漫步入街头的咖啡厅<br>倚在窗边<br>约定的时刻已经过去<br>又该如何？<br>仅仅因为相信<br>仅仅等待五分钟。    </p>
<p>厅外<br>一辆小吃车<br>一个小女孩站在小凳子上<br>忙碌地为客人做着各式的小吃<br>人来人往<br>钱来食往！</p>
<p>厅内<br>静静地拿起手机<br>熟练地按下号码<br>猛然一惊！<br>却按下了断线<br>仅仅因为相信<br>仅仅等待五分钟。</p>
<p>厅外<br>开始下起小雨<br>小女孩吃力地撑起大篷伞<br>小雨淅沥<br>行人渐少<br>生意也冷清了许多<br>偶尔几个人匆忙而至<br>买了些许离去    </p>
<p>厅内<br>呆呆地看笑着<br>缓缓地按下字母键<br>写完了短信<br>却按了删除一键！<br>凝望着街头的拐角<br>仅仅因为相信<br>仅仅再等五分钟。</p>
<p>厅外<br>小雨渐大<br>环视四周<br>女孩只将车拉至屋檐下<br>为什么？<br>早市也该收了吧    </p>
<p>厅内<br>开始欺骗自己<br>一定会来的<br>站起来转身离开<br>走下台阶<br>第一眼望向街口<br>仅仅因为相信<br>仅仅这样离开<br>只希望自己来得太早太早。</p>
<p>屋檐下<br>那个女孩好像在发抖<br>为什么？<br>服务员说<br>那个欺骗小女孩的人<br>不可能回来的    </p>
<p>台阶下<br>呆呆地<br>她在等待那个人回来吗？<br>为什么就舍得骗她<br>双目开始颤抖<br>降温了<br>转身迈进        </p>
<p>屋檐下<br>女孩说，一定会来的！<br>猛然一怔<br>她笑了。    </p>
<p>屋檐下<br>钱被折成了小花<br>变戏法的送上<br>曾经练习了千遍<br>如今献给了另一个<br>转身离开<br>仅仅因为相信<br>仅仅这样离开</p>
<p>这算是believe<br>里面也隐藏着lie</p>
<p>街上<br>停伫回首<br>女孩朝着反方向离开<br>会吗？<br>仅仅因为相信<br>仅仅这样离开。        </p>
<p>街上<br>停伫<br>回首<br>女孩露出无邪的笑</p>
<p>街头<br>雨还在下<br>风却停了<br>一步步地迈向街头<br>那个身影<br>熟悉到陌生                </p>
<p>–你来啦！<br>–对不起，让你等那么久。。。<br>—-呀，你都湿透了！<br>–没事啦，走吧。<br>–什么？<br>–去吃小吃？<br>–好啊！        </p>
<p>仅仅因为相信。<br>雨在下。<br>天已晴。        </p>
]]></content>
    <summary type="html">
    <![CDATA[<p>独自一人<br>漫步入街头的咖啡厅<br>倚在窗边<br>约定的时刻已经过去<br>又该如何？<br>仅仅因为相信<br>仅仅等待五分钟。    </p>
<p>厅外<br>一辆小吃车<br>一个小女孩站在小凳子上<br>忙碌地为客人做着各式的小吃<br>人来人往<br>钱]]>
    </summary>
    
      <category term="生活" scheme="http://catlittlechen.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="活着" scheme="http://catlittlechen.com/categories/%E6%B4%BB%E7%9D%80/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nagios和ganglia]]></title>
    <link href="http://catlittlechen.com/2015/11/11/nagios%E5%92%8Cganglia/"/>
    <id>http://catlittlechen.com/2015/11/11/nagios和ganglia/</id>
    <published>2015-11-11T08:32:19.000Z</published>
    <updated>2017-03-25T14:16:05.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u8001_u751F_u5E38_u8C08_u2013_u76D1_u63A7"><a href="#u8001_u751F_u5E38_u8C08_u2013_u76D1_u63A7" class="headerlink" title="老生常谈–监控"></a>老生常谈–监控</h2><p>很远很久以前，看到过运维的同事在搞监控系统，自己这个苦逼的开发也在有空闲的时间里面，玩玩而已。  </p>
<p>服务器是用了腾讯云的，裸机~~，系统是ubuntu的。<br>参考了<a href="http://idevit.nl/node/93" target="_blank" rel="external">idevit</a></p>
<h2 id="INSTALL_NAGIOS"><a href="#INSTALL_NAGIOS" class="headerlink" title="INSTALL NAGIOS"></a>INSTALL NAGIOS</h2><p>这次的安装是源码安装，现在ubuntu的apt-get安装了nagios还是3版本的，所以还是多折腾，去下载源码咯。<br>先安装一些依赖的软件：</p>
<figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-<span class="built_in">get</span> install libperl-<span class="built_in">dev</span> libpng12-<span class="built_in">dev</span> libgd2-xpm-<span class="built_in">dev</span> build-essential php5-gd wget nginx spwan-fcgi fcgiwrap php5-fpm</span><br></pre></td></tr></table></figure>
<p>本次的安装时4.1.1版本的。</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget <span class="symbol">https:</span>/<span class="regexp">/assets.nagios.com/downloads</span><span class="regexp">/nagioscore/releases</span><span class="regexp">/nagios-4.1.1.tar.gz</span><br><span class="line">wget http:/</span><span class="regexp">/www.nagios-plugins.org/download</span><span class="regexp">/nagios-plugins-2.1.1.tar.gz</span></span><br></pre></td></tr></table></figure>
<p>下载解压到服务器之中~</p>
<p>创建用户nagios和用户组nagcmd</p>
<figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">adduser</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">system</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">no</span><span class="literal">-</span><span class="comment">create</span><span class="literal">-</span><span class="comment">home</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">disabled</span><span class="literal">-</span><span class="comment">login</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">group</span> <span class="comment">nagios</span></span><br><span class="line"><span class="comment">groupadd</span> <span class="comment">nagcmd</span></span><br><span class="line"><span class="comment">usermod</span> <span class="literal">-</span><span class="comment">G</span> <span class="comment">nagcmd</span> <span class="comment">nagios</span></span><br><span class="line"><span class="comment">usermod</span> <span class="literal">-</span><span class="comment">a</span> <span class="literal">-</span><span class="comment">G</span> <span class="comment">nagcmd</span> <span class="comment">www</span><span class="literal">-</span><span class="comment">data</span></span><br></pre></td></tr></table></figure>
<p>配置nagios源码安装：</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> nagios-<span class="number">4.1</span>.<span class="number">1</span></span><br><span class="line">./configure --prefix /usr/local/nagios --sysconfdir=/etc/nagios --with-<span class="keyword">command</span>-user=nagios --with-<span class="keyword">command</span>-group=nagcmd</span><br><span class="line">#这里会检测所需的环境~</span><br><span class="line"><span class="keyword">make</span> <span class="keyword">all</span></span><br><span class="line">   <span class="keyword">make</span> install</span><br><span class="line">   <span class="keyword">make</span> install-init</span><br><span class="line">   <span class="keyword">make</span> install-config</span><br><span class="line">   <span class="keyword">make</span> install-commandmode</span><br><span class="line">#这里是将开始编译，安装到指定目录，分发配置文件和配置了命令</span><br></pre></td></tr></table></figure>
<p>安装完毕之后,这时候你可以把安装包里面的插件cp过来</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -rvf contrib<span class="regexp">/eventhandlers/</span> <span class="regexp">/usr/</span>local<span class="regexp">/nagios/</span>libexec/</span><br><span class="line">chown -R <span class="string">nagios:</span>nagios <span class="regexp">/usr/</span>local<span class="regexp">/nagios/</span>libexec/eventhandlers</span><br></pre></td></tr></table></figure>
<p>nagios需要验证用户的权限，由于本次安装不想使用apache，选用了nginx，所以这次是通过以下的命令来生产用户验证的文件的。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http:<span class="comment">//trac.edgewall.org/export/10791/trunk/contrib/htpasswd.py</span></span><br><span class="line">chmod +x htpasswd<span class="class">.py</span></span><br><span class="line">htpasswd<span class="class">.py</span> -c -<span class="tag">b</span> /etc/nagios/htpasswd<span class="class">.users</span> nagiosadmin password</span><br></pre></td></tr></table></figure>
<p>这里的nagiosadmin是用户名，而password是密码，如果想要重新修改用户名的话，需要在/etc/nagios/cfg.cfg文件中加入权限。<br>比如用户名是catlittlechen的话，可以修改成下面这样子</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">authorized_<span class="keyword">for</span>_system_information=nagiosadmin,catlittlechen</span><br></pre></td></tr></table></figure>
<p>安装下nagios官方提供的插件</p>
<figure class="highlight capnproto"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd nagios-plugins-<span class="number">2.1</span>.<span class="number">1</span></span><br><span class="line">./configure --<span class="keyword">with</span>-nagios-user=nagios --<span class="keyword">with</span>-nagios-<span class="keyword">group</span>=nagios</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
<p>之后可以通过执行下面的指令来验证下是否成功的配置了nagios</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/nagios/</span>bin<span class="regexp">/nagios -v /</span>etc<span class="regexp">/nagios/</span>nagio.cfg</span><br></pre></td></tr></table></figure>
<p>启动的时候，这边的找了下，发现在/etc/rc.d/下，有一个nagios的脚本，就链接过来了/etc/init.d/nagios,然后就可以执行下面的命令启动来。</p>
<figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service nagios <span class="built_in">start</span></span><br></pre></td></tr></table></figure>
<p>弱弱的说，nginx配置在最下面~</p>
<h3 id="INSTALL_GANGLIA"><a href="#INSTALL_GANGLIA" class="headerlink" title="INSTALL GANGLIA"></a>INSTALL GANGLIA</h3><p>安装ganglia只是为了便捷的弥补下nagios只有定时检测的特性，当然，你可以尝试安装pnp4nagios来完成这个功能，但是ganglia更加的强大一些，而且真得简单啊。<br>命令：</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-<span class="keyword">get</span> install -y ganglia-monitor rrdtool gmetad ganglia-webfrontend</span><br></pre></td></tr></table></figure>
<p>这时候需要修改两个地方的配置文件</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ganglia/gmetad.conf</span><br><span class="line"><span class="preprocessor">#data_source <span class="string">"my cluster"</span> localhost</span></span><br><span class="line">data_source <span class="string">"cat chen"</span> localhost</span><br><span class="line">vim /etc/ganglia/gmond.conf</span><br><span class="line">cluster &#123;</span><br><span class="line">	<span class="preprocessor">#name = <span class="string">"unspecified"</span></span></span><br><span class="line">	name = <span class="string">"cat chen"</span></span><br><span class="line">	owner = <span class="string">"unspecified"</span></span><br><span class="line">	latlong = <span class="string">"unspecified"</span></span><br><span class="line">	url = <span class="string">"unspecified"</span></span><br><span class="line">&#125;</span><br><span class="line">udp_send_channel  &#123;</span><br><span class="line">	<span class="preprocessor">#mcast_join = <span class="number">239.2</span><span class="number">.11</span><span class="number">.71</span></span></span><br><span class="line">	host = localhost</span><br><span class="line">	port = <span class="number">8649</span></span><br><span class="line">	ttl = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">udp_recv_channel &#123;</span><br><span class="line">	<span class="preprocessor">#mcast_join = <span class="number">239.2</span><span class="number">.11</span><span class="number">.71</span></span></span><br><span class="line">	port = <span class="number">8649</span></span><br><span class="line">	<span class="preprocessor">#bind = <span class="number">239.2</span><span class="number">.11</span><span class="number">.71</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后执行下面的语句重启下服务</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">service</span> ganglia-monitor restart &amp;&amp; service gmetad restart</span><br></pre></td></tr></table></figure>
<p>杠杠的，ganglia就这么搞定了~<br>这里为了习惯问题，我还执行了以下的命令</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -r <span class="regexp">/usr/</span>share<span class="regexp">/ganglia-webfrontend/</span>  <span class="regexp">/var/</span>www/</span><br><span class="line">mv <span class="regexp">/var/</span>www<span class="regexp">/ganglia-webfrontend /</span>var<span class="regexp">/www/</span>ganglia</span><br></pre></td></tr></table></figure>
<h3 id="Nagios__26amp_3B_26amp_3B_Ganglia"><a href="#Nagios__26amp_3B_26amp_3B_Ganglia" class="headerlink" title="Nagios &amp;&amp; Ganglia"></a>Nagios &amp;&amp; Ganglia</h3><p>最后，当然是配合ganglia和nagios了。</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone http<span class="variable">s:</span>//github.<span class="keyword">com</span>/ganglia/monitor-core/</span><br><span class="line"><span class="keyword">cp</span> monitor-core/contrib/check_ganglia.<span class="keyword">py</span> /usr/local/nagios/libexec</span><br><span class="line">chown nagio<span class="variable">s:nagios</span> check_ganglia.<span class="keyword">py</span></span><br><span class="line">chmod +<span class="keyword">x</span> check_ganglia.<span class="keyword">py</span></span><br></pre></td></tr></table></figure>
<p>为了让nagios可以使用这个插件，需要在command配置中加入以下的配置</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nagios/objects/commands.cfg</span><br><span class="line">define command &#123;</span><br><span class="line">       command_name check_ganglia</span><br><span class="line">       command_line <span class="variable">$USER1</span>$/check_ganglia.py -h <span class="variable">$HOSTNAME</span>$ -m <span class="variable">$ARG1</span>$ -w <span class="variable">$ARG2</span>$ -c <span class="variable">$ARG3</span>$</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后就可以在配置项目里面配置相应的监控目标，比如我简答的配置如下</p>
<figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function_or_atom">vim</span> /<span class="function_or_atom">etc</span>/<span class="function_or_atom">nagios</span>/<span class="function_or_atom">objects</span>/<span class="function_or_atom">localhost</span>.<span class="function_or_atom">cfg</span></span><br><span class="line"><span class="function_or_atom">define</span> <span class="function_or_atom">service</span> &#123;</span><br><span class="line">       <span class="function_or_atom">use</span>     <span class="function_or_atom">local</span>-<span class="function_or_atom">service</span></span><br><span class="line">       <span class="function_or_atom">host_name</span>       <span class="function_or_atom">localhost</span></span><br><span class="line">       <span class="function_or_atom">service_description</span>     <span class="variable">Ganglia</span> <span class="variable">Bytes</span> <span class="variable">Out</span></span><br><span class="line">       <span class="function_or_atom">check_command</span>   <span class="function_or_atom">check_ganglia</span><span class="exclamation_mark">!</span><span class="function_or_atom">bytes_out</span><span class="exclamation_mark">!</span><span class="number">80000</span><span class="exclamation_mark">!</span><span class="number">100000</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function_or_atom">define</span> <span class="function_or_atom">service</span> &#123;</span><br><span class="line">       <span class="function_or_atom">use</span>     <span class="function_or_atom">local</span>-<span class="function_or_atom">service</span></span><br><span class="line">       <span class="function_or_atom">host_name</span>       <span class="function_or_atom">localhost</span></span><br><span class="line">       <span class="function_or_atom">service_description</span>     <span class="variable">Ganglia</span> <span class="variable">Disk</span> <span class="variable">Free</span></span><br><span class="line">       <span class="function_or_atom">check_command</span>   <span class="function_or_atom">check_ganglia</span><span class="exclamation_mark">!</span><span class="function_or_atom">disk_free</span><span class="exclamation_mark">!</span><span class="number">20</span><span class="exclamation_mark">!</span><span class="number">10</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>更加详细的配置，好书推荐，可以参考下<a href="http://nagios-cn.sourceforge.net/nagios-cn/configuration.html" target="_blank" rel="external">nagios_cn</a></p>
<h3 id="nginx_u914D_u7F6E_uFF1A"><a href="#nginx_u914D_u7F6E_uFF1A" class="headerlink" title="nginx配置："></a>nginx配置：</h3><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">server </span><span class="expression">&#123;</span><br><span class="line">	<span class="variable">listen</span> 10086</span><br><span class="line">       <span class="variable">server</span>_<span class="variable">name</span> <span class="variable">nagios.catlittlechen.com</span>;</span><br><span class="line">       <span class="variable">access</span>_<span class="variable">log</span>  <span class="end-block">/var</span><span class="end-block">/log</span><span class="end-block">/nginx</span><span class="end-block">/nagios.access.log</span>;</span><br><span class="line">       <span class="variable">error</span>_<span class="variable">log</span>   <span class="end-block">/var</span><span class="end-block">/log</span><span class="end-block">/nginx</span><span class="end-block">/nagios.error.log</span>;</span><br><span class="line"></span><br><span class="line"> 		<span class="variable">auth</span>_<span class="variable">basic</span>            <span class="string">"Restricted Nagios Area!"</span>;</span><br><span class="line"> 		<span class="variable">auth</span>_<span class="variable">basic</span>_<span class="variable">user</span>_<span class="variable">file</span>  <span class="end-block">/etc</span><span class="end-block">/nagios</span><span class="end-block">/htpasswd.users</span>;</span><br><span class="line"></span><br><span class="line">       <span class="variable">root</span>    <span class="end-block">/var</span><span class="end-block">/www</span>;</span><br><span class="line">       <span class="variable">index</span>   <span class="variable">index.php</span> <span class="variable">index.html</span>;</span><br><span class="line"></span><br><span class="line">       <span class="variable">location</span> <span class="end-block">/nagios </span>&#123;</span><br><span class="line">           <span class="variable">index</span> <span class="variable">index.php</span>;</span><br><span class="line">           <span class="variable">alias</span> <span class="end-block">/usr</span><span class="end-block">/local</span><span class="end-block">/nagios</span><span class="end-block">/share</span>/;</span><br><span class="line">       &#125;</span><span class="xml"></span><br><span class="line">       </span><br><span class="line">       location /ganglia </span><span class="expression">&#123;</span><br><span class="line">           <span class="variable">index</span> <span class="variable">index.php</span> <span class="variable">index.html</span> <span class="variable">index.htm</span>;</span><br><span class="line">       &#125;</span><span class="xml"></span><br><span class="line"></span><br><span class="line">       location ~ ^/nagios/(.*\.php)$ </span><span class="expression">&#123;</span><br><span class="line">           <span class="variable">alias</span> <span class="end-block">/usr</span><span class="end-block">/local</span><span class="end-block">/nagios</span><span class="end-block">/share</span>/$1;</span><br><span class="line">           <span class="variable">include</span> <span class="end-block">/etc</span><span class="end-block">/nginx</span><span class="end-block">/fastcgi.conf</span>;</span><br><span class="line">           <span class="variable">fastcgi</span>_<span class="variable">pass</span> <span class="variable">unix</span>:<span class="end-block">/var</span><span class="end-block">/run</span><span class="end-block">/php</span>5<span class="variable">-fpm.sock</span>;</span><br><span class="line">       &#125;</span><span class="xml"></span><br><span class="line"></span><br><span class="line">       location ~ \.cgi$ </span><span class="expression">&#123;</span><br><span class="line">           <span class="variable">root</span> <span class="end-block">/usr</span><span class="end-block">/local</span><span class="end-block">/nagios</span><span class="end-block">/sbin</span>/;</span><br><span class="line">           <span class="variable">rewrite</span> ^<span class="end-block">/nagios</span><span class="end-block">/cgi-bin</span>/(<span class="variable">.</span>*)\<span class="variable">.cgi</span> /$1<span class="variable">.cgi</span> <span class="variable">break</span>;</span><br><span class="line">           <span class="variable">fastcgi</span>_<span class="variable">param</span> <span class="variable">AUTH</span>_<span class="variable">USER</span> $<span class="variable">remote</span>_<span class="variable">user</span>;</span><br><span class="line">           <span class="variable">fastcgi</span>_<span class="variable">param</span> <span class="variable">REMOTE</span>_<span class="variable">USER</span> $<span class="variable">remote</span>_<span class="variable">user</span>;</span><br><span class="line">           <span class="variable">include</span> <span class="end-block">/etc</span><span class="end-block">/nginx</span><span class="end-block">/fastcgi.conf</span>;</span><br><span class="line">           <span class="variable">fastcgi</span>_<span class="variable">pass</span> <span class="variable">unix</span>:<span class="end-block">/var</span><span class="end-block">/run</span><span class="end-block">/fcgiwrap.socket</span>;</span><br><span class="line">       &#125;</span><span class="xml"></span><br><span class="line"></span><br><span class="line">       location ~ \.php$ </span><span class="expression">&#123;</span><br><span class="line">           <span class="variable">include</span> <span class="end-block">/etc</span><span class="end-block">/nginx</span><span class="end-block">/fastcgi.conf</span>;</span><br><span class="line">           <span class="variable">fastcgi</span>_<span class="variable">pass</span> <span class="variable">unix</span>:<span class="end-block">/var</span><span class="end-block">/run</span><span class="end-block">/php</span>5<span class="variable">-fpm.sock</span>;</span><br><span class="line">       &#125;</span><span class="xml"></span><br><span class="line"></span><br><span class="line">       location ~ /\.ht </span><span class="expression">&#123;</span><br><span class="line">               <span class="variable">deny</span> <span class="variable">all</span>;</span><br><span class="line">       &#125;</span><span class="xml"></span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<p>晒图，别吐槽我的垃圾服务器</p>
<p><img src="http://7xnn4y.com1.z0.glb.clouddn.com/E73986A3-89CE-4BDF-8601-CC53F38C64ED.png" alt="ganglia"><br><img src="http://7xnn4y.com1.z0.glb.clouddn.com/76CE6A52-D7EC-42B8-90B5-C34B1D596421.png" alt="nagios"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u8001_u751F_u5E38_u8C08_u2013_u76D1_u63A7"><a href="#u8001_u751F_u5E38_u8C08_u2013_u76D1_u63A7" class="headerlink" title="老生常谈–监控"><]]>
    </summary>
    
      <category term="ganglia" scheme="http://catlittlechen.com/tags/ganglia/"/>
    
      <category term="nagios" scheme="http://catlittlechen.com/tags/nagios/"/>
    
      <category term="监控" scheme="http://catlittlechen.com/tags/%E7%9B%91%E6%8E%A7/"/>
    
      <category term="折腾" scheme="http://catlittlechen.com/categories/%E6%8A%98%E8%85%BE/"/>
    
  </entry>
  
</feed>
