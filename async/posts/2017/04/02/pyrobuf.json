{"tags":[{"name":"pyrobuf","permalink":"http://catlittlechen.com/tags/pyrobuf/","url":"/async/tags/pyrobuf.json","count":1},{"name":"python","permalink":"http://catlittlechen.com/tags/python/","url":"/async/tags/python.json","count":1}],"categories":[{"name":"python","permalink":"http://catlittlechen.com/categories/python/","url":"/async/categories/python.json","count":1}],"url":"/async/posts/2017/04/02/pyrobuf.json","date":1491141824000,"path":{"year":2017,"month":4,"day":2,"name":"pyrobuf"},"title":"pyrobuf","permalink":"http://catlittlechen.com/2017/04/02/pyrobuf/","content":"<h2 id=\"protobuf\"><a href=\"#protobuf\" class=\"headerlink\" title=\"protobuf\"></a>protobuf</h2><p>Protocol Buffers 是一种轻便高效的结构化数据存储格式。我也是重度使用者。最近需要大量的实时处理Tb级别的数据，因此找到了protobuf的代替库 —- <a href=\"https://github.com/appnexus/pyrobuf\" target=\"_blank\" rel=\"external\">pyrobuf</a></p>\n<h2 id=\"pyrobuf\"><a href=\"#pyrobuf\" class=\"headerlink\" title=\"pyrobuf\"></a>pyrobuf</h2><p>pyrobuf是一个使用cython的pb库。一开始从他的github中，我确实看到了挺好的优化效果。</p>\n<p>但是pyrobuf这个库的限制还是蛮大的，主要是对于proto文件。比如</p>\n<figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>. 不能在message里面定义数据结构，不然转化的过程中，会找不到定义；</span><br><span class=\"line\"><span class=\"number\">2</span>. proto定义的过程中，message的定义不能加上分号为结尾；</span><br><span class=\"line\"><span class=\"number\">3</span>. <span class=\"class\"><span class=\"keyword\">enum</span>定义的类型，生成之后暂时还找不到映射会名称的方式；</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"use\"><a href=\"#use\" class=\"headerlink\" title=\"use\"></a>use</h2><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install pyrobuf</span><br><span class=\"line\">pyrobuf --<span class=\"keyword\">out</span>-<span class=\"keyword\">dir</span> <span class=\"keyword\">out</span> --build-<span class=\"keyword\">dir</span> build --install</span><br></pre></td></tr></table></figure>\n<p>这里面，out目录存放着生成的cython的代码，build目录存放这边一好的so文件，而install的参数添加之后，则pyrobuf会将编译好的so文件复制到python的library目录，这就可以直接使用。</p>\n<h2 id=\"u7ED3_u679C\"><a href=\"#u7ED3_u679C\" class=\"headerlink\" title=\"结果\"></a>结果</h2><p>上线观察了下数据，原本20分钟转化的数据，只用了4分钟就转化完毕。不过数据内容还没有核对，晚点再查看吧~</p>\n"}