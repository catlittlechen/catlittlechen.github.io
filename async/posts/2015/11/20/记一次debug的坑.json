{"tags":[{"name":"golang","permalink":"http://catlittlechen.com/tags/golang/","url":"/async/tags/golang.json","count":3},{"name":"踩坑日记","permalink":"http://catlittlechen.com/tags/踩坑日记/","url":"/async/tags/踩坑日记.json","count":6}],"categories":[{"name":"golang","permalink":"http://catlittlechen.com/categories/golang/","url":"/async/categories/golang.json","count":3}],"url":"/async/posts/2015/11/20/记一次debug的坑.json","date":1447991820000,"path":{"year":2015,"month":11,"day":20,"name":"记一次debug的坑"},"title":"记一次debug的坑","permalink":"http://catlittlechen.com/2015/11/20/记一次debug的坑/","content":"<h2 id=\"u611F_u609F\"><a href=\"#u611F_u609F\" class=\"headerlink\" title=\"感悟\"></a>感悟</h2><p>这个故事告诉我们，永远不要相信自己的眼睛。</p>\n<h2 id=\"u90A3_u5929\"><a href=\"#u90A3_u5929\" class=\"headerlink\" title=\"那天\"></a>那天</h2><p>天气晴朗，阳光明媚~<br>我用Go写了一段程序，程序中需要通过从文件中读取一段文字，然后拼入sql中，然后在数据库中执行。</p>\n<p>由于我需要从文件中一行一行的读出数据，我用了这样子的方式读取。</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func readLines(path string) (lines []string, <span class=\"keyword\">err</span> <span class=\"keyword\">error</span>) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">var</span> (</span><br><span class=\"line\">           <span class=\"keyword\">file</span>   *os.<span class=\"keyword\">File</span></span><br><span class=\"line\">           part   []byte</span><br><span class=\"line\">           prefix bool</span><br><span class=\"line\">       )</span><br><span class=\"line\">       <span class=\"keyword\">if</span> <span class=\"keyword\">file</span>, <span class=\"keyword\">err</span> = os.<span class=\"keyword\">Open</span>(path); <span class=\"keyword\">err</span> != nil &#123;</span><br><span class=\"line\">           <span class=\"literal\">return</span></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       reader := bufio.NewReader(<span class=\"keyword\">file</span>)</span><br><span class=\"line\">       buffer := bytes.NewBuffer(make([]byte, 1024))</span><br><span class=\"line\">       <span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> part, prefix, <span class=\"keyword\">err</span> = reader.ReadLine(); <span class=\"keyword\">err</span> != nil &#123;</span><br><span class=\"line\">               <span class=\"keyword\">break</span></span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           buffer.Write(part)</span><br><span class=\"line\">           <span class=\"keyword\">if</span> !prefix &#123;</span><br><span class=\"line\">               lines = <span class=\"keyword\">append</span>(lines, buffer.<span class=\"literal\">String</span>())</span><br><span class=\"line\">               buffer.Reset()</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> <span class=\"keyword\">err</span> == io.EOF &#123;</span><br><span class=\"line\">           <span class=\"keyword\">err</span> = nil</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"literal\">return</span></span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>调用的时候，我通过用了大概如下的代码：</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lines， <span class=\"keyword\">err</span> := readLines(userFile)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">err</span> != nil &#123;</span><br><span class=\"line\">\t<span class=\"literal\">return</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> _, <span class=\"keyword\">line</span> := <span class=\"keyword\">range</span> lines &#123;</span><br><span class=\"line\">\tsqlStr := rawSql % <span class=\"keyword\">line</span></span><br><span class=\"line\">\t_, <span class=\"keyword\">err</span> = dbConn.Exec(sqlStr)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"keyword\">err</span> != nil &#123;</span><br><span class=\"line\">\t\t<span class=\"literal\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当然它报错了！这样子的错误信息~</p>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error <span class=\"number\">1064</span>: You have <span class=\"operator\">an</span> error <span class=\"operator\">in</span> your SQL syntax; check <span class=\"operator\">the</span> manual that corresponds <span class=\"built_in\">to</span> your MySQL server <span class=\"built_in\">version</span> <span class=\"keyword\">for</span> <span class=\"operator\">the</span> <span class=\"constant\">right</span> syntax <span class=\"built_in\">to</span> use near <span class=\"string\">''</span> <span class=\"keyword\">at</span> <span class=\"built_in\">line</span> <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p>通过查阅，我发现这个near ‘’，是的竟然是空的，不像一般的写错sql语句一样是会写明错误信息~<br>瞬间我就神经开始大条了。</p>\n<pre><code>难道我后面写漏了什么？\n怎么可能！\n不，我得先去喝杯水，然后再来看看。\n水果到了，再吃个苹果。\n吃完洗个手-。-\n我觉得没错啊！\nF**k\n</code></pre><h2 id=\"u7ED3_u5C40\"><a href=\"#u7ED3_u5C40\" class=\"headerlink\" title=\"结局\"></a>结局</h2><p>不玩了，之所以我会认为自己没错，是因为我将整个sql语句打印了出来，在肉眼确认没错之后，又去mysql得命令行中直接执行了语句，结果十分顺利。<br>最后，十分大条的将从文件中读取出来的lines用长度打印了出来，瞬间我就斯巴达了！  </p>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> _, <span class=\"built_in\">line</span> := range <span class=\"keyword\">lines</span> &#123;</span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">\"len[%s] is %d\"</span>, <span class=\"built_in\">line</span>, <span class=\"built_in\">len</span>(<span class=\"built_in\">line</span>))</span><br><span class=\"line\">\tsqlStr := rawSql % <span class=\"built_in\">line</span></span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">\"sqlStr[%s] is %d\"</span>, <span class=\"built_in\">line</span>, <span class=\"built_in\">len</span>(sqlStr))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>结果。。。</p>\n<figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">len[<span class=\"keyword\">*</span><span class=\"keyword\">*</span><span class=\"keyword\">*</span><span class=\"keyword\">*</span><span class=\"keyword\">*</span>] is 1024!</span><br><span class=\"line\">sqlStr[<span class=\"keyword\">*</span><span class=\"keyword\">*</span><span class=\"keyword\">*</span><span class=\"keyword\">*</span><span class=\"keyword\">*</span>] is 1065!</span><br></pre></td></tr></table></figure>\n<p>这就是为什么我执行失败的原因！sqlStr里面，存在着一段空白的buffer！却是打印不出来的~<br>最后我把代码改成了这样~</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data, <span class=\"keyword\">err</span> = ioutil.ReadAll(userFile)</span><br><span class=\"line\">   <span class=\"keyword\">if</span> <span class=\"keyword\">err</span> != nil &#123;</span><br><span class=\"line\">\t<span class=\"literal\">return</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">lines := strings.<span class=\"keyword\">Split</span>(<span class=\"literal\">string</span>(data), <span class=\"string\">\"\\n\"</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Done\"><a href=\"#Done\" class=\"headerlink\" title=\"Done\"></a>Done</h2>"}