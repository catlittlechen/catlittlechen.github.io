{"tags":[{"name":"ganglias","permalink":"http://catlittlechen.com/tags/ganglias/","url":"/async/tags/ganglias.json","count":1},{"name":"nagios","permalink":"http://catlittlechen.com/tags/nagios/","url":"/async/tags/nagios.json","count":1},{"name":"监控","permalink":"http://catlittlechen.com/tags/监控/","url":"/async/tags/监控.json","count":1}],"categories":[],"url":"/async/posts/2015/11/11/nagios和ganglia.json","date":1447230739000,"path":{"year":2015,"month":11,"day":11,"name":"nagios和ganglia"},"title":"nagios和ganglia","permalink":"http://catlittlechen.com/2015/11/11/nagios和ganglia/","content":"<h2 id=\"u8001_u751F_u5E38_u8C08_u2013_u76D1_u63A7\"><a href=\"#u8001_u751F_u5E38_u8C08_u2013_u76D1_u63A7\" class=\"headerlink\" title=\"老生常谈–监控\"></a>老生常谈–监控</h2><p>很远很久以前，看到过运维的同事在搞监控系统，自己这个苦逼的开发也在有空闲的时间里面，玩玩而已。  </p>\n<p>服务器是用了腾讯云的，裸机~~，系统是ubuntu的。<br>参考了<a href=\"http://idevit.nl/node/93\" target=\"_blank\" rel=\"external\">idevit</a></p>\n<h2 id=\"INSTALL_NAGIOS\"><a href=\"#INSTALL_NAGIOS\" class=\"headerlink\" title=\"INSTALL NAGIOS\"></a>INSTALL NAGIOS</h2><p>这次的安装是源码安装，现在ubuntu的apt-get安装了nagios还是3版本的，所以还是多折腾，去下载源码咯。<br>先安装一些依赖的软件：</p>\n<pre><code>apt-get install libperl-dev libpng12-dev libgd2-xpm-dev build-essential php5-gd wget nginx spwan-fcgi fcgiwrap php5-fpm \n</code></pre><p>本次的安装时4.1.1版本的。</p>\n<pre><code>wget https://assets.nagios.com/downloads/nagioscore/releases/nagios-4.1.1.tar.gz\nwget http://www.nagios-plugins.org/download/nagios-plugins-2.1.1.tar.gz\n</code></pre><p>下载解压到服务器之中~</p>\n<p>创建用户nagios和用户组nagcmd</p>\n<pre><code>adduser --system --no-create-home --disabled-login --group nagios\ngroupadd nagcmd\nusermod -G nagcmd nagios\nusermod -a -G nagcmd www-data\n</code></pre><p>配置nagios源码安装：</p>\n<pre><code>cd nagios-4.1.1\n./configure --prefix /usr/local/nagios --sysconfdir=/etc/nagios --with-command-user=nagios --with-command-group=nagcmd\n#这里会检测所需的环境~\nmake all\nmake install\nmake install-init\nmake install-config\nmake install-commandmode\n#这里是将开始编译，安装到指定目录，分发配置文件和配置了命令\n</code></pre><p>安装完毕之后,这时候你可以把安装包里面的插件cp过来</p>\n<pre><code>cp -rvf contrib/eventhandlers/ /usr/local/nagios/libexec/\nchown -R nagios:nagios /usr/local/nagios/libexec/eventhandlers\n</code></pre><p>nagios需要验证用户的权限，由于本次安装不想使用apache，选用了nginx，所以这次是通过以下的命令来生产用户验证的文件的。</p>\n<pre><code>wget http://trac.edgewall.org/export/10791/trunk/contrib/htpasswd.py\nchmod +x htpasswd.py\nhtpasswd.py -c -b /etc/nagios/htpasswd.users nagiosadmin password\n</code></pre><p>这里的nagiosadmin是用户名，而password是密码，如果想要重新修改用户名的话，需要在/etc/nagios/cfg.cfg文件中加入权限。<br>比如用户名是catlittlechen的话，可以修改成下面这样子</p>\n<pre><code>authorized_for_system_information=nagiosadmin,catlittlechen\n</code></pre><p>安装下nagios官方提供的插件</p>\n<pre><code>cd nagios-plugins-2.1.1\n./configure --with-nagios-user=nagios --with-nagios-group=nagios\nmake\nmake install\n</code></pre><p>之后可以通过执行下面的指令来验证下是否成功的配置了nagios</p>\n<pre><code>/usr/local/nagios/bin/nagios -v /etc/nagios/nagio.cfg\n</code></pre><p>启动的时候，这边的找了下，发现在/etc/rc.d/下，有一个nagios的脚本，就链接过来了/etc/init.d/nagios,然后就可以执行下面的命令启动来。</p>\n<pre><code>service nagios start\n</code></pre><p>弱弱的说，nginx配置在最下面~</p>\n<h3 id=\"INSTALL_GANGLIA\"><a href=\"#INSTALL_GANGLIA\" class=\"headerlink\" title=\"INSTALL GANGLIA\"></a>INSTALL GANGLIA</h3><p>安装ganglia只是为了便捷的弥补下nagios只有定时检测的特性，当然，你可以尝试安装pnp4nagios来完成这个功能，但是ganglia更加的强大一些，而且真得简单啊。<br>命令：</p>\n<pre><code>apt-get install -y ganglia-monitor rrdtool gmetad ganglia-webfrontend\n</code></pre><p>这时候需要修改两个地方的配置文件</p>\n<pre><code>vim /etc/ganglia/gmetad.conf\n#data_source &quot;my cluster&quot; localhost\ndata_source &quot;cat chen&quot; localhost\nvim /etc/ganglia/gmond.conf\ncluster {\n    #name = &quot;unspecified&quot;\n    name = &quot;cat chen&quot;\n    owner = &quot;unspecified&quot;\n    latlong = &quot;unspecified&quot;\n    url = &quot;unspecified&quot;\n}\nudp_send_channel  {\n    #mcast_join = 239.2.11.71\n    host = localhost\n    port = 8649\n    ttl = 1\n}\nudp_recv_channel {\n    #mcast_join = 239.2.11.71\n    port = 8649\n    #bind = 239.2.11.71\n}\n</code></pre><p>然后执行下面的语句重启下服务</p>\n<pre><code>service ganglia-monitor restart &amp;&amp; service gmetad restart\n</code></pre><p>杠杠的，ganglia就这么搞定了~<br>这里为了习惯问题，我还执行了以下的命令</p>\n<pre><code>cp -r /usr/share/ganglia-webfrontend/  /var/www/\nmv /var/www/ganglia-webfrontend /var/www/ganglia\n</code></pre><h3 id=\"Nagios__26amp_3B_26amp_3B_Ganglia\"><a href=\"#Nagios__26amp_3B_26amp_3B_Ganglia\" class=\"headerlink\" title=\"Nagios &amp;&amp; Ganglia\"></a>Nagios &amp;&amp; Ganglia</h3><p>最后，当然是配合ganglia和nagios了。</p>\n<pre><code>git clone https://github.com/ganglia/monitor-core/\ncp monitor-core/contrib/check_ganglia.py /usr/local/nagios/libexec\nchown nagios:nagios check_ganglia.py\nchmod +x check_ganglia.py\n</code></pre><p>为了让nagios可以使用这个插件，需要在command配置中加入以下的配置</p>\n<pre><code>vim /etc/nagios/objects/commands.cfg\ndefine command {\n    command_name check_ganglia\n    command_line $USER1$/check_ganglia.py -h $HOSTNAME$ -m $ARG1$ -w $ARG2$ -c $ARG3$\n}\n</code></pre><p>然后就可以在配置项目里面配置相应的监控目标，比如我简答的配置如下</p>\n<pre><code>vim /etc/nagios/objects/localhost.cfg\ndefine service {\n    use     local-service\n    host_name       localhost\n    service_description     Ganglia Bytes Out\n    check_command   check_ganglia!bytes_out!80000!100000\n}\n\ndefine service {\n    use     local-service\n    host_name       localhost\n    service_description     Ganglia Disk Free\n    check_command   check_ganglia!disk_free!20!10\n}\n</code></pre><p>更加详细的配置，好书推荐，可以参考下<a href=\"http://nagios-cn.sourceforge.net/nagios-cn/configuration.html\" target=\"_blank\" rel=\"external\">nagios_cn</a></p>\n<h3 id=\"nginx_u914D_u7F6E_uFF1A\"><a href=\"#nginx_u914D_u7F6E_uFF1A\" class=\"headerlink\" title=\"nginx配置：\"></a>nginx配置：</h3><pre><code>server {\n    listen 10086\n    server_name nagios.catlittlechen.com;\n    access_log  /var/log/nginx/nagios.access.log;\n    error_log   /var/log/nginx/nagios.error.log;\n\n      auth_basic            &quot;Restricted Nagios Area!&quot;;\n      auth_basic_user_file  /etc/nagios/htpasswd.users;\n\n    root    /var/www;\n    index   index.php index.html;\n\n    location /nagios {\n        index index.php;\n        alias /usr/local/nagios/share/;\n    }\n\n    location /ganglia {\n        index index.php index.html index.htm;\n    }\n\n    location ~ ^/nagios/(.*\\.php)$ {\n        alias /usr/local/nagios/share/$1;\n        include /etc/nginx/fastcgi.conf;\n        fastcgi_pass unix:/var/run/php5-fpm.sock;\n    }\n\n    location ~ \\.cgi$ {\n        root /usr/local/nagios/sbin/;\n        rewrite ^/nagios/cgi-bin/(.*)\\.cgi /$1.cgi break;\n        fastcgi_param AUTH_USER $remote_user;\n        fastcgi_param REMOTE_USER $remote_user;\n        include /etc/nginx/fastcgi.conf;\n        fastcgi_pass unix:/var/run/fcgiwrap.socket;\n    }\n\n    location ~ \\.php$ {\n        include /etc/nginx/fastcgi.conf;\n        fastcgi_pass unix:/var/run/php5-fpm.sock;\n    }\n\n    location ~ /\\.ht {\n            deny all;\n    }\n}\n</code></pre><p>晒图，别吐槽我的垃圾服务器</p>\n<p><img src=\"http://7xnn4y.com1.z0.glb.clouddn.com/E73986A3-89CE-4BDF-8601-CC53F38C64ED.png\" alt=\"ganglia\"><br><img src=\"http://7xnn4y.com1.z0.glb.clouddn.com/76CE6A52-D7EC-42B8-90B5-C34B1D596421.png\" alt=\"nagios\"></p>\n"}